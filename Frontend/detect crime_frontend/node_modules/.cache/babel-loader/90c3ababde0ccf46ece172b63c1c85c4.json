{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\Zest-Package-1.1.0\\\\zestreact-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\Zest-Package-1.1.0\\\\zestreact-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\Zest-Package-1.1.0\\\\zestreact-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\Zest-Package-1.1.0\\\\zestreact-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\Zest-Package-1.1.0\\\\zestreact-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\Zest-Package-1.1.0\\\\zestreact-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\Zest-Package-1.1.0\\\\zestreact-app\\\\src\\\\components\\\\common\\\\Header\\\\Header.jsx\";\nimport React from 'react';\nimport { Collapse, Navbar, NavbarBrand, Nav, NavItem, Dropdown, DropdownToggle, DropdownMenu, DropdownItem, Container, InputGroup, InputGroupAddon, Input } from 'reactstrap';\nimport { Messages, Notifications } from 'components';\nimport dashboardRoutes from 'routes/general.jsx';\nimport { messages } from 'variables/topbar.jsx';\nimport { notifications } from 'variables/topbar.jsx';\nvar IMGDIR = process.env.REACT_APP_IMGDIR;\n\nvar Header =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Header, _React$Component);\n\n  function Header(props) {\n    var _this;\n\n    _classCallCheck(this, Header);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Header).call(this, props));\n    _this.state = {\n      isOpen: false,\n      userddOpen: false,\n      searchOpen: false,\n      messagesddOpen: false,\n      notificationsddOpen: false,\n      color: \"primary\",\n      profilename: 'Eric Nelson',\n      profileimg: IMGDIR + '/images/profile/profile.jpg'\n    };\n    _this.toggle = _this.toggle.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.userddToggle = _this.userddToggle.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.messagesddToggle = _this.messagesddToggle.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.notificationsddToggle = _this.notificationsddToggle.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.searchToggle = _this.searchToggle.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Header, [{\n    key: \"toggle\",\n    value: function toggle() {\n      if (this.state.isOpen) {\n        this.setState({\n          color: \"primary\"\n        });\n      } else {\n        this.setState({\n          color: \"white\"\n        });\n      }\n\n      this.setState({\n        isOpen: !this.state.isOpen\n      });\n    }\n  }, {\n    key: \"userddToggle\",\n    value: function userddToggle(e) {\n      this.setState({\n        userddOpen: !this.state.userddOpen\n      });\n    }\n  }, {\n    key: \"searchToggle\",\n    value: function searchToggle() {\n      //this.refs.searchbarToggle.classList.toggle('toggled');\n      this.setState({\n        searchOpen: !this.state.searchOpen\n      }); //console.log(this.state.searchOpen);\n      //this.refs.searchbarToggle.classList.toggle('opened');\n    }\n  }, {\n    key: \"messagesddToggle\",\n    value: function messagesddToggle(e) {\n      this.setState({\n        messagesddOpen: !this.state.messagesddOpen\n      });\n    }\n  }, {\n    key: \"notificationsddToggle\",\n    value: function notificationsddToggle(e) {\n      this.setState({\n        notificationsddOpen: !this.state.notificationsddOpen\n      });\n    }\n  }, {\n    key: \"getBrand\",\n    value: function getBrand() {\n      var _this2 = this;\n\n      var name;\n      dashboardRoutes.map(function (prop, key) {\n        if (prop.collapse) {\n          prop.views.map(function (prop, key) {\n            if (prop.path === _this2.props.location.pathname) {\n              name = prop.name;\n            }\n\n            return null;\n          });\n        } else {\n          if (prop.redirect) {\n            if (prop.path === _this2.props.location.pathname) {\n              name = prop.name;\n            }\n          } else {\n            if (prop.path === _this2.props.location.pathname) {\n              name = prop.name;\n            }\n          }\n        }\n\n        return null;\n      });\n      return name;\n    }\n  }, {\n    key: \"openSidebar\",\n    value: function openSidebar() {\n      document.documentElement.classList.toggle('nav-toggle');\n      this.refs.sidebarToggle.classList.toggle('toggled'); // close chat bar if open on smaller screens\n\n      if (window.innerWidth < 993) {\n        document.documentElement.classList.remove('nav-toggle-chat'); // this.refs.chatToggle.classList.remove('toggled');\n      }\n    }\n  }, {\n    key: \"openChat\",\n    value: function openChat() {\n      document.documentElement.classList.toggle('nav-toggle-chat'); // this.refs.chatToggle.classList.toggle('toggled');\n      // close menu bar if open on smaller screens\n\n      if (window.innerWidth < 993) {\n        document.documentElement.classList.remove('nav-toggle');\n        this.refs.sidebarToggle.classList.remove('toggled');\n      }\n    }\n  }, {\n    key: \"toggle_grid\",\n    value: function toggle_grid() {\n      document.documentElement.classList.toggle('toggle-grid');\n    }\n  }, {\n    key: \"openStyle\",\n    value: function openStyle() {\n      document.documentElement.classList.toggle('nav-toggle-style'); // this.refs.chatToggle.classList.toggle('toggled');\n      // close menu bar if open on smaller screens\n\n      /*if(window.innerWidth < 993){\n          document.documentElement.classList.remove('nav-toggle');\n          this.refs.sidebarToggle.classList.remove('toggled');\n      }*/\n    } // function that adds color white/transparent to the navbar on resize (this is for the collapse)\n\n  }, {\n    key: \"updateColor\",\n    value: function updateColor() {\n      if (window.innerWidth < 993 && this.state.isOpen) {\n        this.setState({\n          color: \"primary\"\n        });\n      } else {\n        this.setState({\n          color: \"primary\"\n        });\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.navtype === \"mini\") {\n        document.documentElement.classList.add('nav-toggle');\n        this.refs.sidebarToggle.classList.add('toggled');\n      } else {\n        document.documentElement.classList.remove('nav-toggle');\n        this.refs.sidebarToggle.classList.remove('toggled');\n      }\n\n      window.addEventListener(\"resize\", this.updateColor.bind(this));\n\n      if (this.props.admintype === 'general') {\n        this.setState({\n          profileimg: IMGDIR + '/images/profile/profile-general.jpg',\n          profilename: 'Nancy Spencer'\n        });\n      } else if (this.props.admintype === 'hospital') {\n        this.setState({\n          profileimg: IMGDIR + '/images/profile/profile-hospital.jpg',\n          profilename: 'Dianna Austin'\n        });\n      } else if (this.props.admintype === 'university') {\n        this.setState({\n          profilename: 'Henry Gibson',\n          profileimg: IMGDIR + '/images/profile/profile-university.jpg'\n        });\n      } else if (this.props.admintype === 'crm') {\n        this.setState({\n          profilename: 'Rick  Woods',\n          profileimg: IMGDIR + '/images/profile/profile-crm.jpg'\n        });\n      } else if (this.props.admintype === 'music') {\n        this.setState({\n          profilename: 'Kerry Flores',\n          profileimg: IMGDIR + '/images/profile/profile-music.jpg'\n        });\n      } else if (this.props.admintype === 'blog') {\n        this.setState({\n          profilename: 'Alice Gross',\n          profileimg: IMGDIR + '/images/profile/profile-blog.jpg'\n        });\n      } else if (this.props.admintype === 'ecommerce') {\n        this.setState({\n          profilename: 'Jake  Daniel',\n          profileimg: IMGDIR + '/images/profile/profile-ecommerce.jpg'\n        });\n      } else if (this.props.admintype === 'freelance') {\n        this.setState({\n          profilename: 'Eric Nelson',\n          profileimg: IMGDIR + '/images/profile/profile-freelance.jpg'\n        });\n      } else if (this.props.admintype === 'social') {\n        this.setState({\n          profilename: 'Penny Taylor',\n          profileimg: IMGDIR + '/images/profile/profile-social.jpg'\n        });\n      } else {\n        this.setState({\n          profilename: 'Nancy Spencer',\n          profileimg: IMGDIR + '/images/profile/profile-general.jpg'\n        });\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(e) {\n      if (window.innerWidth < 993 && e.history.location.pathname !== e.location.pathname && document.documentElement.className.indexOf('nav-toggle') !== -1) {\n        document.documentElement.classList.toggle('nav-toggle');\n        this.refs.sidebarToggle.classList.toggle('toggled');\n      }\n\n      if (window.innerWidth < 993 && e.history.location.pathname !== e.location.pathname && document.documentElement.className.indexOf('nav-toggle-chat') !== -1) {\n        document.documentElement.classList.toggle('nav-toggle-chat'); // this.refs.chatToggle.classList.toggle('toggled');\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return (// add or remove classes depending if we are on full-screen-maps page or not\n        React.createElement(Navbar, {\n          expand: \"lg\",\n          className: this.props.location.pathname.indexOf('full-screen-maps') !== -1 ? \"navbar-absolute fixed-top\" : \"navbar-absolute fixed-top \",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 226\n          },\n          __self: this\n        }, React.createElement(Container, {\n          fluid: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 230\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"navbar-wrapper\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 231\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"navbar-toggle\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 232\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          type: \"button\",\n          ref: \"sidebarToggle\",\n          className: \"navbar-toggler\",\n          onClick: function onClick() {\n            return _this3.openSidebar();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 233\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"i-menu\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 234\n          },\n          __self: this\n        }))), React.createElement(Dropdown, {\n          nav: true,\n          isOpen: this.state.messagesddOpen,\n          toggle: function toggle(e) {\n            return _this3.messagesddToggle(e);\n          },\n          className: \"navbardd\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 239\n          },\n          __self: this\n        }, React.createElement(DropdownToggle, {\n          caret: true,\n          nav: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 240\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"i-envelope\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 241\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          className: \"badge badge-pill badge-primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 242\n          },\n          __self: this\n        }, \"3\")), React.createElement(Messages, {\n          messages: messages,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 244\n          },\n          __self: this\n        })), React.createElement(Dropdown, {\n          nav: true,\n          isOpen: this.state.notificationsddOpen,\n          toggle: function toggle(e) {\n            return _this3.notificationsddToggle(e);\n          },\n          className: \"navbardd\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 247\n          },\n          __self: this\n        }, React.createElement(DropdownToggle, {\n          caret: true,\n          nav: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 248\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"i-bell\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 249\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          className: \"badge badge-pill badge-primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 250\n          },\n          __self: this\n        }, \"7\")), React.createElement(Notifications, {\n          notifications: notifications,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 252\n          },\n          __self: this\n        })), React.createElement(\"form\", {\n          className: \"topbar-search-form\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 255\n          },\n          __self: this\n        }, React.createElement(InputGroup, {\n          className: \"topbar-search \" + (this.state.searchOpen === true ? \"open\" : \"\"),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 256\n          },\n          __self: this\n        }, React.createElement(InputGroupAddon, {\n          addonType: \"append\",\n          onClick: function onClick() {\n            return _this3.searchToggle();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 257\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"i-magnifier\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 257\n          },\n          __self: this\n        })), React.createElement(Input, {\n          placeholder: \"Search...\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 258\n          },\n          __self: this\n        }))), React.createElement(NavbarBrand, {\n          href: \"/\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 263\n          },\n          __self: this\n        }, this.getBrand())), React.createElement(Collapse, {\n          isOpen: this.state.isOpen,\n          navbar: true,\n          className: \"navbar-right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 269\n          },\n          __self: this\n        }, React.createElement(Nav, {\n          navbar: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 270\n          },\n          __self: this\n        }, React.createElement(Dropdown, {\n          nav: true,\n          isOpen: this.state.userddOpen,\n          toggle: function toggle(e) {\n            return _this3.userddToggle(e);\n          },\n          className: \"userdd\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 271\n          },\n          __self: this\n        }, React.createElement(DropdownToggle, {\n          caret: true,\n          nav: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 272\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: this.state.profileimg,\n          alt: \"react-logo\",\n          className: \"avatar-image\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 273\n          },\n          __self: this\n        }), \" \", React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 273\n          },\n          __self: this\n        }, this.state.profilename)), React.createElement(DropdownMenu, {\n          right: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 275\n          },\n          __self: this\n        }, React.createElement(DropdownItem, {\n          tag: \"a\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 276\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"i-wrench\",\n          href: \"#!\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 276\n          },\n          __self: this\n        }), \" Settings\"), React.createElement(DropdownItem, {\n          tag: \"a\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 277\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"i-user\",\n          href: \"#!\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 277\n          },\n          __self: this\n        }), \" Profile\"), React.createElement(DropdownItem, {\n          tag: \"a\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 278\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"i-info\",\n          href: \"#!\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 278\n          },\n          __self: this\n        }), \" Help\"), React.createElement(DropdownItem, {\n          tag: \"a\",\n          className: \"\",\n          href: \"#!\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 279\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"i-lock\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 279\n          },\n          __self: this\n        }), \" Logout\"))), React.createElement(NavItem, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 282\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"navbar-toggle chat-toggle\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 283\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          type: \"button\",\n          ref: \"chatToggle\",\n          className: \"navbar-toggler\",\n          onClick: function onClick() {\n            return _this3.openChat();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 284\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"i-bubbles\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 285\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          className: \"badge badge-pill badge-primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 286\n          },\n          __self: this\n        }, \"9\"))))), React.createElement(\"div\", {\n          className: \"screensize\",\n          onClick: function onClick() {\n            return _this3.toggle_grid();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 295\n          },\n          __self: this\n        }))))\n      );\n    }\n  }]);\n\n  return Header;\n}(React.Component);\n\nexport default Header;","map":{"version":3,"sources":["C:\\Users\\ASUS\\Desktop\\Zest-Package-1.1.0\\zestreact-app\\src\\components\\common\\Header\\Header.jsx"],"names":["React","Collapse","Navbar","NavbarBrand","Nav","NavItem","Dropdown","DropdownToggle","DropdownMenu","DropdownItem","Container","InputGroup","InputGroupAddon","Input","Messages","Notifications","dashboardRoutes","messages","notifications","IMGDIR","process","env","REACT_APP_IMGDIR","Header","props","state","isOpen","userddOpen","searchOpen","messagesddOpen","notificationsddOpen","color","profilename","profileimg","toggle","bind","userddToggle","messagesddToggle","notificationsddToggle","searchToggle","setState","e","name","map","prop","key","collapse","views","path","location","pathname","redirect","document","documentElement","classList","refs","sidebarToggle","window","innerWidth","remove","navtype","add","addEventListener","updateColor","admintype","history","className","indexOf","openSidebar","getBrand","openChat","toggle_grid","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n    Collapse, Navbar, NavbarBrand, Nav, NavItem,\n    Dropdown, DropdownToggle, DropdownMenu, DropdownItem,\n    Container, InputGroup, InputGroupAddon, Input\n} from 'reactstrap';\n\nimport {\n    Messages, Notifications\n} from 'components';\n\nimport dashboardRoutes from 'routes/general.jsx';\n\nimport { messages } from 'variables/topbar.jsx';\nimport { notifications } from 'variables/topbar.jsx';\n\nvar IMGDIR = process.env.REACT_APP_IMGDIR;\nclass Header extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            isOpen: false,\n            userddOpen: false,\n            searchOpen: false,\n            messagesddOpen: false,\n            notificationsddOpen: false,\n            color: \"primary\",\n            profilename: 'Eric Nelson',\n            profileimg: IMGDIR+'/images/profile/profile.jpg',\n        };\n        this.toggle = this.toggle.bind(this);\n        this.userddToggle = this.userddToggle.bind(this);\n        this.messagesddToggle = this.messagesddToggle.bind(this);\n        this.notificationsddToggle = this.notificationsddToggle.bind(this);\n        this.searchToggle = this.searchToggle.bind(this);\n\n    }\n    toggle() {\n        if(this.state.isOpen){\n            this.setState({\n                color: \"primary\"\n            });\n        } else {\n            this.setState({\n                color: \"white\"\n            });\n        }\n        this.setState({\n            isOpen: !this.state.isOpen\n        });\n    }\n    userddToggle(e){\n        this.setState({\n            userddOpen: !this.state.userddOpen\n        });\n    }\n    searchToggle(){\n        //this.refs.searchbarToggle.classList.toggle('toggled');\n        this.setState({\n            searchOpen: !this.state.searchOpen\n        });\n        //console.log(this.state.searchOpen);\n        //this.refs.searchbarToggle.classList.toggle('opened');\n    }\n    messagesddToggle(e){\n        this.setState({\n            messagesddOpen: !this.state.messagesddOpen\n        });\n    }\n    notificationsddToggle(e){\n        this.setState({\n            notificationsddOpen: !this.state.notificationsddOpen\n        });\n    }\n    getBrand(){\n        var name;\n        dashboardRoutes.map((prop,key) => {\n            if(prop.collapse){\n                 prop.views.map((prop,key) => {\n                    if(prop.path === this.props.location.pathname){\n                        name = prop.name;\n                    }\n                    return null;\n                })\n            } else {\n                if(prop.redirect){\n                    if(prop.path === this.props.location.pathname){\n                        name = prop.name;\n                    }\n                }else{\n                    if(prop.path === this.props.location.pathname){\n                        name = prop.name;\n                    }\n                }\n            }\n            return null;\n        })\n        return name;\n    }\n    openSidebar(){\n        document.documentElement.classList.toggle('nav-toggle');\n        this.refs.sidebarToggle.classList.toggle('toggled');\n\n        // close chat bar if open on smaller screens\n        if(window.innerWidth < 993){\n            document.documentElement.classList.remove('nav-toggle-chat');\n           // this.refs.chatToggle.classList.remove('toggled');\n        }\n    }\n    openChat(){\n        document.documentElement.classList.toggle('nav-toggle-chat');\n       // this.refs.chatToggle.classList.toggle('toggled');\n\n        // close menu bar if open on smaller screens\n        if(window.innerWidth < 993){\n            document.documentElement.classList.remove('nav-toggle');\n            this.refs.sidebarToggle.classList.remove('toggled');\n        }\n    }\n    toggle_grid(){\n        document.documentElement.classList.toggle('toggle-grid');\n    }\n\n\n    openStyle(){\n        document.documentElement.classList.toggle('nav-toggle-style');\n       // this.refs.chatToggle.classList.toggle('toggled');\n\n        // close menu bar if open on smaller screens\n        /*if(window.innerWidth < 993){\n            document.documentElement.classList.remove('nav-toggle');\n            this.refs.sidebarToggle.classList.remove('toggled');\n        }*/\n    }\n    // function that adds color white/transparent to the navbar on resize (this is for the collapse)\n    updateColor(){\n        if(window.innerWidth < 993 && this.state.isOpen){\n            this.setState({\n                color: \"primary\"\n            });\n        } else {\n            this.setState({\n                color: \"primary\"\n            });\n        }\n\n    }\n    componentDidMount(){\n        if(this.props.navtype === \"mini\"){\n            document.documentElement.classList.add('nav-toggle');\n            this.refs.sidebarToggle.classList.add('toggled');\n        } else {\n            document.documentElement.classList.remove('nav-toggle');\n            this.refs.sidebarToggle.classList.remove('toggled');\n        }\n        window.addEventListener(\"resize\", this.updateColor.bind(this));\n\n            if(this.props.admintype === 'general'){\n                this.setState({     \n                    profileimg: IMGDIR+'/images/profile/profile-general.jpg',\n                    profilename: 'Nancy Spencer'\n                });  \n            } else if(this.props.admintype === 'hospital'){\n                this.setState({     \n                    profileimg: IMGDIR+'/images/profile/profile-hospital.jpg',    \n                    profilename: 'Dianna Austin'\n                });  \n            } else if(this.props.admintype === 'university'){\n                this.setState({     \n                    profilename: 'Henry Gibson',\n                    profileimg: IMGDIR+'/images/profile/profile-university.jpg'    \n                });  \n            } else if(this.props.admintype === 'crm'){\n                this.setState({     \n                    profilename: 'Rick  Woods',\n                    profileimg: IMGDIR+'/images/profile/profile-crm.jpg'    \n                });  \n            } else if(this.props.admintype === 'music'){\n                this.setState({     \n                    profilename: 'Kerry Flores',\n                    profileimg: IMGDIR+'/images/profile/profile-music.jpg'    \n                });  \n            } else if(this.props.admintype === 'blog'){\n                this.setState({     \n                    profilename: 'Alice Gross',\n                    profileimg: IMGDIR+'/images/profile/profile-blog.jpg'    \n                });  \n            } else if(this.props.admintype === 'ecommerce'){\n                this.setState({     \n                    profilename: 'Jake  Daniel',\n                    profileimg: IMGDIR+'/images/profile/profile-ecommerce.jpg'    \n                });  \n            } else if(this.props.admintype === 'freelance'){\n                this.setState({     \n                    profilename: 'Eric Nelson',\n                    profileimg: IMGDIR+'/images/profile/profile-freelance.jpg'    \n                });  \n            } else if(this.props.admintype === 'social'){\n                this.setState({     \n                    profilename: 'Penny Taylor',\n                    profileimg: IMGDIR+'/images/profile/profile-social.jpg'    \n                });  \n            } else {\n                this.setState({     \n                    profilename: 'Nancy Spencer',\n                    profileimg: IMGDIR+'/images/profile/profile-general.jpg'    \n                });  \n            }\n\n\n\n    }\n    componentDidUpdate(e){\n        if(window.innerWidth < 993 && e.history.location.pathname !== e.location.pathname && document.documentElement.className.indexOf('nav-toggle') !== -1){\n            document.documentElement.classList.toggle('nav-toggle');\n            this.refs.sidebarToggle.classList.toggle('toggled');\n        }\n        if(window.innerWidth < 993 && e.history.location.pathname !== e.location.pathname && document.documentElement.className.indexOf('nav-toggle-chat') !== -1){\n            document.documentElement.classList.toggle('nav-toggle-chat');\n           // this.refs.chatToggle.classList.toggle('toggled');\n        }\n    }\n    render(){\n        return (\n            // add or remove classes depending if we are on full-screen-maps page or not\n            <Navbar expand=\"lg\"\n                className={\n                    this.props.location.pathname.indexOf('full-screen-maps') !== -1 ?\n                    \"navbar-absolute fixed-top\":\"navbar-absolute fixed-top \"}>\n                <Container fluid>\n                    <div className=\"navbar-wrapper\">\n                        <div className=\"navbar-toggle\">\n                            <button type=\"button\" ref=\"sidebarToggle\" className=\"navbar-toggler\" onClick={() => this.openSidebar()}>\n                                <i className=\"i-menu\"></i>\n                            </button>\n                        </div>\n\n\n                            <Dropdown nav isOpen={this.state.messagesddOpen} toggle={(e) => this.messagesddToggle(e)} className=\"navbardd\">\n                                <DropdownToggle caret nav>\n                                    <i className=\"i-envelope\"></i>\n                                    <span className=\"badge badge-pill badge-primary\">3</span>\n                                </DropdownToggle>\n                                <Messages messages={messages}/>\n                            </Dropdown>\n\n                            <Dropdown nav isOpen={this.state.notificationsddOpen} toggle={(e) => this.notificationsddToggle(e)} className=\"navbardd\">\n                                <DropdownToggle caret nav>\n                                    <i className=\"i-bell\"></i>\n                                    <span className=\"badge badge-pill badge-primary\">7</span>\n                                </DropdownToggle>\n                                <Notifications notifications={notifications}/>\n                            </Dropdown>\n    \n                            <form className=\"topbar-search-form\">\n                                <InputGroup className={\"topbar-search \"+(this.state.searchOpen === true ? \"open\":\"\")}>\n                                    <InputGroupAddon addonType=\"append\" onClick={() => this.searchToggle()}><i className=\"i-magnifier\"></i></InputGroupAddon>\n                                    <Input placeholder=\"Search...\" />\n                                </InputGroup>\n                            </form>\n\n\n                        <NavbarBrand href=\"/\">{this.getBrand()}</NavbarBrand>\n\n\n\n                    </div>\n                    \n                    <Collapse isOpen={this.state.isOpen} navbar className=\"navbar-right\">\n                        <Nav navbar>\n                            <Dropdown nav isOpen={this.state.userddOpen} toggle={(e) => this.userddToggle(e)} className=\"userdd\">\n                                <DropdownToggle caret nav>\n                                   <img src={this.state.profileimg} alt=\"react-logo\" className=\"avatar-image\" /> <span>{this.state.profilename}</span>\n                                </DropdownToggle>\n                                <DropdownMenu right>\n                                    <DropdownItem tag=\"a\"><i className=\"i-wrench\" href=\"#!\"></i> Settings</DropdownItem>\n                                    <DropdownItem tag=\"a\"><i className=\"i-user\" href=\"#!\"></i> Profile</DropdownItem>\n                                    <DropdownItem tag=\"a\"><i className=\"i-info\" href=\"#!\"></i> Help</DropdownItem>\n                                    <DropdownItem tag=\"a\" className=\"\" href=\"#!\"><i className=\"i-lock\"></i> Logout</DropdownItem>\n                                </DropdownMenu>\n                            </Dropdown>\n                            <NavItem>\n                                <div className=\"navbar-toggle chat-toggle\">\n                                    <button type=\"button\" ref=\"chatToggle\" className=\"navbar-toggler\" onClick={() => this.openChat()}>\n                                            <i className=\"i-bubbles\"></i>\n                                            <span className=\"badge badge-pill badge-primary\">9</span>\n                                    </button>\n                                </div>\n\n                                \n\n\n                            </NavItem>\n                        </Nav>\n                        <div className=\"screensize\" onClick={() => this.toggle_grid()}></div>\n                    </Collapse>\n                </Container>\n            </Navbar>\n        );\n    }\n}\n\nexport default Header;"]},"metadata":{},"sourceType":"module"}