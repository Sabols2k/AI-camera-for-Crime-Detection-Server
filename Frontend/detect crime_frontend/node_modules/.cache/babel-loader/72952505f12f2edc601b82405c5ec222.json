{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\Zest-Package-1.1.0\\\\zestreact-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\Zest-Package-1.1.0\\\\zestreact-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\Zest-Package-1.1.0\\\\zestreact-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\Zest-Package-1.1.0\\\\zestreact-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\Zest-Package-1.1.0\\\\zestreact-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\Zest-Package-1.1.0\\\\zestreact-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\Zest-Package-1.1.0\\\\zestreact-app\\\\src\\\\layouts\\\\General.jsx\";\nimport React from 'react'; // javascript plugin used to create scrollbars on windows\n// import PerfectScrollbar from 'perfect-scrollbar';\n\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { Header, Footer, Sidebar, ChatSidebar, Stylebar } from 'components';\nimport dashboardRoutes from 'routes/general.jsx';\nimport { topbarStyle, menuStyle, menuType, topbarType, navWidth, chatWidth, chatType } from 'variables/settings/general.jsx'; //var ps;\n\nvar GeneralLayout =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(GeneralLayout, _React$Component);\n\n  function GeneralLayout(props) {\n    var _this;\n\n    _classCallCheck(this, GeneralLayout);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(GeneralLayout).call(this, props));\n    _this.state = {\n      menuColor: menuStyle,\n      topbarColor: topbarStyle,\n      menuType: menuType,\n      topbarType: topbarType\n    };\n    _this.menuSettings = _this.menuSettings.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.topbarSettings = _this.topbarSettings.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(GeneralLayout, [{\n    key: \"menuSettings\",\n    value: function menuSettings(val1, val2) {\n      this.setState({\n        menuColor: val1,\n        menuType: val2\n      });\n    }\n  }, {\n    key: \"topbarSettings\",\n    value: function topbarSettings(val1, val2) {\n      this.setState({\n        topbarColor: val1,\n        topbarType: val2\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {}\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(e) {\n      if (e.history.action === \"PUSH\") {\n        this.refs.mainPanel.scrollTop = 0;\n        document.scrollingElement.scrollTop = 0;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"wrapper\",\n        ref: \"themeWrapper\",\n        \"data-menu\": this.state.menuColor,\n        \"data-topbar\": this.state.topbarColor,\n        \"data-menutype\": this.state.menuType,\n        \"data-topbartype\": this.state.topbarType,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(Header, Object.assign({}, this.props, {\n        navtype: navWidth,\n        admintype: 'general',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      })), React.createElement(Sidebar, Object.assign({}, this.props, {\n        routes: dashboardRoutes,\n        admintype: 'general',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"main-panel\",\n        ref: \"mainPanel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, dashboardRoutes.map(function (prop, key) {\n        if (prop.collapse) {\n          return prop.views.map(function (prop2, key2) {\n            return React.createElement(Route, {\n              path: prop2.path,\n              component: prop2.component,\n              key: key2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 64\n              },\n              __self: this\n            });\n          });\n        }\n\n        if (prop.redirect) return React.createElement(Redirect, {\n          from: prop.path,\n          to: prop.pathTo,\n          key: key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        });\n        return React.createElement(Route, {\n          path: prop.path,\n          component: prop.component,\n          key: key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        });\n      })), React.createElement(Footer, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      })), React.createElement(ChatSidebar, Object.assign({}, this.props, {\n        routes: dashboardRoutes,\n        chatwidth: chatWidth,\n        chattype: chatType,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      })), React.createElement(Stylebar, {\n        menuSettings: this.menuSettings,\n        topbarSettings: this.topbarSettings,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return GeneralLayout;\n}(React.Component);\n\nexport default GeneralLayout;","map":{"version":3,"sources":["C:\\Users\\ASUS\\Desktop\\Zest-Package-1.1.0\\zestreact-app\\src\\layouts\\General.jsx"],"names":["React","Route","Switch","Redirect","Header","Footer","Sidebar","ChatSidebar","Stylebar","dashboardRoutes","topbarStyle","menuStyle","menuType","topbarType","navWidth","chatWidth","chatType","GeneralLayout","props","state","menuColor","topbarColor","menuSettings","bind","topbarSettings","val1","val2","setState","e","history","action","refs","mainPanel","scrollTop","document","scrollingElement","map","prop","key","collapse","views","prop2","key2","path","component","redirect","pathTo","Component"],"mappings":"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","sourcesContent":["import React from 'react';\n// javascript plugin used to create scrollbars on windows\n// import PerfectScrollbar from 'perfect-scrollbar';\nimport {\n    Route,\n    Switch,\n    Redirect\n} from 'react-router-dom';\n\nimport { Header, Footer, Sidebar, ChatSidebar, Stylebar } from 'components'\n\nimport dashboardRoutes from 'routes/general.jsx';\nimport { topbarStyle, menuStyle, menuType, topbarType, navWidth, chatWidth, chatType } from 'variables/settings/general.jsx';\n\n//var ps;\n\nclass GeneralLayout extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = { \n            menuColor: menuStyle,\n            topbarColor: topbarStyle,\n            menuType: menuType,\n            topbarType: topbarType,\n        };\n        this.menuSettings = this.menuSettings.bind(this);\n        this.topbarSettings = this.topbarSettings.bind(this);\n    }\n\n    menuSettings(val1,val2) {\n        this.setState({\n          menuColor: val1,\n          menuType: val2,\n        });\n    }\n    topbarSettings(val1,val2) {\n        this.setState({\n          topbarColor: val1,\n          topbarType: val2,\n        });\n    }\n\n    componentDidMount(){}\n    componentWillUnmount(){}\n    componentDidUpdate(e) {\n      if(e.history.action === \"PUSH\"){\n        this.refs.mainPanel.scrollTop = 0;\n        document.scrollingElement.scrollTop = 0;\n      }\n    }\n    render(){\n        return (\n            <div className=\"wrapper\" ref=\"themeWrapper\" data-menu={this.state.menuColor} data-topbar={this.state.topbarColor} data-menutype={this.state.menuType} data-topbartype={this.state.topbarType}>\n\n                <Header {...this.props} navtype={navWidth} admintype={'general'}/>\n                <Sidebar {...this.props} routes={dashboardRoutes} admintype={'general'}/>\n                <div className=\"main-panel\" ref=\"mainPanel\">\n                    <Switch>\n                        {\n                            dashboardRoutes.map((prop,key) => {\n                                if(prop.collapse){\n                                    return prop.views.map((prop2,key2) => {\n                                        return (\n                                            <Route path={prop2.path} component={prop2.component} key={key2}/>\n                                        );\n                                    })\n                                }\n                                if(prop.redirect)\n                                    return (\n                                        <Redirect from={prop.path} to={prop.pathTo} key={key}/>\n                                    );\n                                return (\n                                    <Route path={prop.path} component={prop.component} key={key}/>\n                                );\n                            })\n                        }\n                    </Switch>\n                    <Footer fluid/>\n                </div>\n                <ChatSidebar {...this.props} routes={dashboardRoutes} chatwidth={chatWidth}  chattype={chatType}/>\n                <Stylebar menuSettings={this.menuSettings} topbarSettings={this.topbarSettings} />\n            </div>\n        );\n    }\n}\n\nexport default GeneralLayout;\n"]},"metadata":{},"sourceType":"module"}