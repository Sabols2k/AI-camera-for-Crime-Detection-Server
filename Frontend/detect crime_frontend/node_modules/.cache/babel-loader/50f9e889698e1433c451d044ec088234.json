{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\Zest-Package-1.1.0\\\\zestreact-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\Zest-Package-1.1.0\\\\zestreact-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\Zest-Package-1.1.0\\\\zestreact-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\Zest-Package-1.1.0\\\\zestreact-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\Zest-Package-1.1.0\\\\zestreact-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\Zest-Package-1.1.0\\\\zestreact-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\Zest-Package-1.1.0\\\\zestreact-app\\\\src\\\\components\\\\common\\\\StyleSettings\\\\StyleSettings.jsx\";\nimport React from 'react'; //import { Button } from 'reactstrap';\n// used for making the prop types of this component\n//import PropTypes from 'prop-types';\n\nimport PerfectScrollbar from 'perfect-scrollbar';\nvar menuColor;\nvar menuType;\nvar topbarType;\nvar topbarColor;\nvar ps;\n\nvar StyleSettings =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(StyleSettings, _React$Component);\n\n  function StyleSettings(props) {\n    var _this;\n\n    _classCallCheck(this, StyleSettings);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(StyleSettings).call(this, props));\n    _this.menuToggle = _this.menuToggle.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.topbarToggle = _this.topbarToggle.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.OpenSettings = _this.OpenSettings.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(StyleSettings, [{\n    key: \"OpenSettings\",\n    value: function OpenSettings(e) {\n      this.refs.SettingsToggle.classList.toggle('open');\n    }\n  }, {\n    key: \"menuToggle\",\n    value: function menuToggle(e) {\n      var dataid = e.currentTarget.dataset.id;\n      menuColor = dataid;\n\n      if (dataid === \"black\") {\n        menuType = \"dark\";\n      } else if (dataid === \"white\" || dataid === \"transparent\") {\n        menuType = \"light\";\n      } else if (dataid === \"teal\" || dataid === \"purple\" || dataid === \"orange\" || dataid === \"pink\" || dataid === \"red\") {\n        menuType = \"colored\";\n      }\n\n      this.props.menuSettings(menuColor, menuType);\n    }\n  }, {\n    key: \"topbarToggle\",\n    value: function topbarToggle(e) {\n      var dataid = e.currentTarget.dataset.id;\n      topbarColor = dataid;\n\n      if (dataid === \"black\") {\n        topbarType = \"dark\";\n      } else if (dataid === \"white\" || dataid === \"transparent\") {\n        topbarType = \"light\";\n      } else if (dataid === \"teal\" || dataid === \"purple\" || dataid === \"orange\" || dataid === \"pink\" || dataid === \"red\") {\n        topbarType = \"colored\";\n      }\n\n      this.props.topbarSettings(topbarColor, topbarType);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (navigator.platform.indexOf('Win') > -1) {\n        ps = new PerfectScrollbar(this.refs.stylebar, {\n          suppressScrollX: true,\n          suppressScrollY: false\n        });\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (navigator.platform.indexOf('Win') > -1) {\n        ps.destroy();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"style-settings\",\n        ref: \"SettingsToggle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"style-toggle\",\n        onClick: function onClick() {\n          return _this2.OpenSettings();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"i-settings\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"style-wrap\",\n        ref: \"stylebar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"Menu Style\"), React.createElement(\"ul\", {\n        className: \"menu\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        onClick: function onClick(e) {\n          return _this2.menuToggle(e);\n        },\n        \"data-id\": \"black\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"Black \", React.createElement(\"i\", {\n        className: \"i-check\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      })), React.createElement(\"li\", {\n        onClick: function onClick(e) {\n          return _this2.menuToggle(e);\n        },\n        \"data-id\": \"white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"White \", React.createElement(\"i\", {\n        className: \"i-check\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      })), React.createElement(\"li\", {\n        onClick: function onClick(e) {\n          return _this2.menuToggle(e);\n        },\n        \"data-id\": \"teal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Teal \", React.createElement(\"i\", {\n        className: \"i-check\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      })), React.createElement(\"li\", {\n        onClick: function onClick(e) {\n          return _this2.menuToggle(e);\n        },\n        \"data-id\": \"orange\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"Orange \", React.createElement(\"i\", {\n        className: \"i-check\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      })), React.createElement(\"li\", {\n        onClick: function onClick(e) {\n          return _this2.menuToggle(e);\n        },\n        \"data-id\": \"purple\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Purple \", React.createElement(\"i\", {\n        className: \"i-check\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      })), React.createElement(\"li\", {\n        onClick: function onClick(e) {\n          return _this2.menuToggle(e);\n        },\n        \"data-id\": \"pink\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"Pink \", React.createElement(\"i\", {\n        className: \"i-check\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      })), React.createElement(\"li\", {\n        onClick: function onClick(e) {\n          return _this2.menuToggle(e);\n        },\n        \"data-id\": \"red\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Red \", React.createElement(\"i\", {\n        className: \"i-check\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      })), React.createElement(\"li\", {\n        onClick: function onClick(e) {\n          return _this2.menuToggle(e);\n        },\n        \"data-id\": \"transparent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Transparent \", React.createElement(\"i\", {\n        className: \"i-check\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }))), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"Top Bar Style\"), React.createElement(\"ul\", {\n        className: \"topbar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        onClick: function onClick(e) {\n          return _this2.topbarToggle(e);\n        },\n        \"data-id\": \"black\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Black \", React.createElement(\"i\", {\n        className: \"i-check\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      })), React.createElement(\"li\", {\n        onClick: function onClick(e) {\n          return _this2.topbarToggle(e);\n        },\n        \"data-id\": \"white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"White \", React.createElement(\"i\", {\n        className: \"i-check\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      })), React.createElement(\"li\", {\n        onClick: function onClick(e) {\n          return _this2.topbarToggle(e);\n        },\n        \"data-id\": \"teal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"Teal \", React.createElement(\"i\", {\n        className: \"i-check\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      })), React.createElement(\"li\", {\n        onClick: function onClick(e) {\n          return _this2.topbarToggle(e);\n        },\n        \"data-id\": \"orange\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"Orange \", React.createElement(\"i\", {\n        className: \"i-check\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      })), React.createElement(\"li\", {\n        onClick: function onClick(e) {\n          return _this2.topbarToggle(e);\n        },\n        \"data-id\": \"purple\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"Purple \", React.createElement(\"i\", {\n        className: \"i-check\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      })), React.createElement(\"li\", {\n        onClick: function onClick(e) {\n          return _this2.topbarToggle(e);\n        },\n        \"data-id\": \"pink\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"Pink \", React.createElement(\"i\", {\n        className: \"i-check\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      })), React.createElement(\"li\", {\n        onClick: function onClick(e) {\n          return _this2.topbarToggle(e);\n        },\n        \"data-id\": \"red\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"Red \", React.createElement(\"i\", {\n        className: \"i-check\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      })), React.createElement(\"li\", {\n        onClick: function onClick(e) {\n          return _this2.topbarToggle(e);\n        },\n        \"data-id\": \"transparent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"Transparent \", React.createElement(\"i\", {\n        className: \"i-check\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return StyleSettings;\n}(React.Component);\n\nexport default StyleSettings;","map":{"version":3,"sources":["C:\\Users\\ASUS\\Desktop\\Zest-Package-1.1.0\\zestreact-app\\src\\components\\common\\StyleSettings\\StyleSettings.jsx"],"names":["React","PerfectScrollbar","menuColor","menuType","topbarType","topbarColor","ps","StyleSettings","props","menuToggle","bind","topbarToggle","OpenSettings","e","refs","SettingsToggle","classList","toggle","dataid","currentTarget","dataset","id","menuSettings","topbarSettings","navigator","platform","indexOf","stylebar","suppressScrollX","suppressScrollY","destroy","Component"],"mappings":"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","sourcesContent":["import React from 'react';\n//import { Button } from 'reactstrap';\n// used for making the prop types of this component\n//import PropTypes from 'prop-types';\nimport PerfectScrollbar from 'perfect-scrollbar';\n\nvar menuColor;\nvar menuType;\nvar topbarType;\nvar topbarColor;\nvar ps;\n\nclass StyleSettings extends React.Component{\n    constructor(props) {\n        super(props);\n        this.menuToggle = this.menuToggle.bind(this);\n        this.topbarToggle = this.topbarToggle.bind(this);\n        this.OpenSettings = this.OpenSettings.bind(this);\n    }\n\n    OpenSettings(e){\n        this.refs.SettingsToggle.classList.toggle('open');\n    }\n    menuToggle(e){\n\n        var dataid = e.currentTarget.dataset.id;\n        menuColor = dataid;\n\n        if(dataid === \"black\") {\n            menuType = \"dark\";\n        } else if(dataid === \"white\" || dataid === \"transparent\") {\n            menuType = \"light\";\n        } else if(dataid === \"teal\" || dataid === \"purple\" || dataid === \"orange\" || dataid === \"pink\" || dataid === \"red\") {\n            menuType = \"colored\";\n        }\n\n        this.props.menuSettings(menuColor, menuType);\n\n    }\n\n     topbarToggle(e){\n\n        var dataid = e.currentTarget.dataset.id;\n        topbarColor = dataid;\n\n        if(dataid === \"black\") {\n            topbarType = \"dark\";\n        } else if(dataid === \"white\" || dataid === \"transparent\") {\n            topbarType = \"light\";\n        } else if(dataid === \"teal\" || dataid === \"purple\" || dataid === \"orange\" || dataid === \"pink\" || dataid === \"red\") {\n            topbarType = \"colored\";\n        }\n\n        this.props.topbarSettings(topbarColor, topbarType);\n\n    }\n    componentDidMount(){\n        if(navigator.platform.indexOf('Win') > -1){\n            ps = new PerfectScrollbar(this.refs.stylebar,{suppressScrollX: true, suppressScrollY: false});\n        }\n    }\n    componentWillUnmount(){\n        if(navigator.platform.indexOf('Win') > -1){\n            ps.destroy();\n        }\n    }\n\n    render(){\n        return (\n                <div className=\"style-settings\" ref=\"SettingsToggle\">\n                <div className=\"style-toggle\" onClick={() => this.OpenSettings()}><i className=\"i-settings\"></i></div>\n                <div className=\"style-wrap\" ref=\"stylebar\">\n                        <p>Menu Style</p>\n                         <ul className=\"menu\">\n                            <li onClick={(e) => this.menuToggle(e)} data-id=\"black\">Black <i className=\"i-check\"></i></li>\n                            <li onClick={(e) => this.menuToggle(e)} data-id=\"white\">White <i className=\"i-check\"></i></li>\n                            <li onClick={(e) => this.menuToggle(e)} data-id=\"teal\">Teal <i className=\"i-check\"></i></li>\n                            <li onClick={(e) => this.menuToggle(e)} data-id=\"orange\">Orange <i className=\"i-check\"></i></li>\n                            <li onClick={(e) => this.menuToggle(e)} data-id=\"purple\">Purple <i className=\"i-check\"></i></li>\n                            <li onClick={(e) => this.menuToggle(e)} data-id=\"pink\">Pink <i className=\"i-check\"></i></li>\n                            <li onClick={(e) => this.menuToggle(e)} data-id=\"red\">Red <i className=\"i-check\"></i></li>\n                            <li onClick={(e) => this.menuToggle(e)} data-id=\"transparent\">Transparent <i className=\"i-check\"></i></li>\n                         </ul>\n                        <p>Top Bar Style</p>\n                         <ul className=\"topbar\">\n                            <li onClick={(e) => this.topbarToggle(e)} data-id=\"black\">Black <i className=\"i-check\"></i></li>\n                            <li onClick={(e) => this.topbarToggle(e)} data-id=\"white\">White <i className=\"i-check\"></i></li>\n                            <li onClick={(e) => this.topbarToggle(e)} data-id=\"teal\">Teal <i className=\"i-check\"></i></li>\n                            <li onClick={(e) => this.topbarToggle(e)} data-id=\"orange\">Orange <i className=\"i-check\"></i></li>\n                            <li onClick={(e) => this.topbarToggle(e)} data-id=\"purple\">Purple <i className=\"i-check\"></i></li>\n                            <li onClick={(e) => this.topbarToggle(e)} data-id=\"pink\">Pink <i className=\"i-check\"></i></li>\n                            <li onClick={(e) => this.topbarToggle(e)} data-id=\"red\">Red <i className=\"i-check\"></i></li>\n                            <li onClick={(e) => this.topbarToggle(e)} data-id=\"transparent\">Transparent <i className=\"i-check\"></i></li>\n                         </ul>\n                    </div>\n                </div>\n\n\n        );\n    }\n}\n\nexport default StyleSettings;\n"]},"metadata":{},"sourceType":"module"}