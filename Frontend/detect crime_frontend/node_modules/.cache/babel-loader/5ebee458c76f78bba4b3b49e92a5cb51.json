{"ast":null,"code":"// import React from 'react';\n// import { NavLink } from 'react-router-dom';\n// import { Nav } from 'reactstrap';\n// import { Navmenudropdown } from 'components';\n// import { Navmenugroup } from 'components';\n// // javascript plugin used to create scrollbars on windows\n// import PerfectScrollbar from 'perfect-scrollbar';\n// //import useravatar from \"assets/img/profile.jpg\";\n// import logofull from \"assets/img/logo-full2.png\";\n// import logomini from \"assets/img/logo-mini.png\";\n// import logofulldark from \"assets/img/logo-full-dark.png\";\n// import logominidark from \"assets/img/logo-mini-dark.png\";\n// var ps;\n// var currentmenu = \"notset\";\n// var IMGDIR = process.env.REACT_APP_IMGDIR;\n// class Sidebar extends React.Component{\n//     constructor(props){\n//         super(props);\n//         this.activeRoute.bind(this);\n//         this.state = {\n//           opendd: '',\n//           openmenu: 'none',\n//           profilename: 'Eric Nelson',\n//           profileimg: IMGDIR+'/images/profile/profile.jpg',\n//           profileposition: 'Web Developer',\n//         };\n//         this.handleOpendd = this.handleOpendd.bind(this);\n//         this.handlecurrent = this.handlecurrent.bind(this);\n//     }\n//     handlecurrent(currentmenu) {   \n//        //console.log(\"handlecurrent\"+currentmenu);\n//        if(this.state.opendd !== \"\"){\n//            currentmenu = \"\"; \n//        }\n//     }\n//     handleOpendd(open) {  \n//         currentmenu = \"\";\n//         if(this.state.opendd === open){\n//             this.setState({     \n//                 opendd: ''    \n//             });  \n//         } else {\n//             this.setState({     \n//                 opendd: open    \n//             });  \n//         }\n//         //currentmenu = \"\";\n//         //console.log(open + this.state.opendd);\n//     }\n//     // verifies if routeName is the one active (in browser input)\n//     activeRoute(routeName) {\n//         return this.props.location.pathname.indexOf(routeName) > -1 ? ' active' : '';\n//     }\n//     componentDidMount(){\n//         if(this.props.admintype === 'general'){\n//             this.setState({     \n//                 profileposition: 'IoT Developer',\n//                 profileimg: IMGDIR+'/images/profile/profile-general2.jpg',\n//                 profilename: 'Đặng Đức Châu'\n//             });  \n//         } else if(this.props.admintype === 'hospital'){\n//             this.setState({     \n//                 profileposition: 'Surgeon',\n//                 profileimg: IMGDIR+'/images/profile/profile-hospital.jpg',    \n//                 profilename: 'Dianna Austin'\n//             });  \n//         } else if(this.props.admintype === 'university'){\n//             this.setState({     \n//                 profileposition: 'IoT Developer',\n//                 profileimg: IMGDIR+'/images/profile/profile-general2.jpg',\n//                 profilename: 'Đặng Đức Châu'\n//             });  \n//         } else if(this.props.admintype === 'crm'){\n//             this.setState({     \n//                 profileposition: 'Customer',\n//                 profilename: 'Rick  Woods',\n//                 profileimg: IMGDIR+'/images/profile/profile-crm.jpg'    \n//             });  \n//         } else if(this.props.admintype === 'music'){\n//             this.setState({     \n//                 profileposition: 'Singer',\n//                 profilename: 'Kerry Flores',\n//                 profileimg: IMGDIR+'/images/profile/profile-music.jpg'    \n//             });  \n//         } else if(this.props.admintype === 'blog'){\n//             this.setState({     \n//                 profileposition: 'Editor',\n//                 profilename: 'Alice Gross',\n//                 profileimg: IMGDIR+'/images/profile/profile-blog.jpg'    \n//             });  \n//         } else if(this.props.admintype === 'ecommerce'){\n//             this.setState({     \n//                 profileposition: 'Vendor',\n//                 profilename: 'Jake  Daniel',\n//                 profileimg: IMGDIR+'/images/profile/profile-ecommerce.jpg'    \n//             });  \n//         } else if(this.props.admintype === 'freelance'){\n//             this.setState({     \n//                 profileposition: 'Designer',\n//                 profilename: 'Eric Nelson',\n//                 profileimg: IMGDIR+'/images/profile/profile-freelance.jpg'    \n//             });  \n//         } else if(this.props.admintype === 'social'){\n//             this.setState({     \n//                 profileposition: 'Artist',\n//                 profilename: 'Penny Taylor',\n//                 profileimg: IMGDIR+'/images/profile/profile-social.jpg'    \n//             });  \n//         } else {\n//             this.setState({     \n//                 profileposition: 'Web Developer',\n//                 profilename: 'Nancy Spencer',\n//                 profileimg: IMGDIR+'/images/profile/profile-general.jpg'    \n//             });  \n//         }\n//         if(navigator.platform.indexOf('Win') > -1){\n//             ps = new PerfectScrollbar(this.refs.sidebar,{suppressScrollX: true, suppressScrollY: false});\n//         }\n//         //console.log(this.props.location.pathname);\n//     }\n//     componentWillUnmount(){\n//         if(navigator.platform.indexOf('Win') > -1){\n//             ps.destroy();\n//         }\n//     }\n//     render(){\n//         const children = (child, parent) => {\n//             var links = [];\n//             if (child) {\n//                 for (var i = 0; i < child.length; i++) {\n//                     links.push(\n//                         <li key={i}>\n//                             <NavLink to={child[i].path} className=\"nav-link\" activeClassName=\"active\">\n//                                 <span>{child[i].name}</span>\n//                             </NavLink>\n//                         </li>\n//                     );\n//                     //console.log(child[i].parent + this.props.location.pathname + child[i].path);\n//                     if(this.props.location.pathname === child[i].path){\n//                         //console.log(\"match found \" + child[i].parent);\n//                         if(currentmenu === \"notset\" && this.state.opendd === \"\"){\n//                             currentmenu = parent; //child[i].parent;\n//                         }\n//                     }\n//                     if(this.props.location.pathname === \"/\"){\n//                         currentmenu = \"dashboards\";\n//                     }\n//                 }\n//                 //console.log(currentmenu);\n//                 //console.log(this.props.location.pathname);\n//                 //console.log(parent);\n//                 return <Nav>{links}</Nav>\n//             }\n//         }\n//         return (\n//             <div className=\"sidebar menubar\" data-color=\"black\">\n//                 <div className=\"logo\">\n//                     <a href=\"/\" className=\"logo-mini\">\n//                         <div className=\"logo-img\">\n//                             <img src={logomini} alt=\"react-logo\" className=\"light-logo\" />\n//                             <img src={logominidark} alt=\"react-logo\" className=\"dark-logo\"/>\n//                         </div>\n//                     </a>\n//                     <a href=\"/\" className=\"logo-full\">\n//                             <img src={logofull} alt=\"react-logo\" className=\"light-logo\"/>\n//                             <img src={logofulldark} alt=\"react-logo\" className=\"dark-logo\"/>\n//                     </a>\n//                 </div> \n//                 <div className=\"sidebar-wrapper\" ref=\"sidebar\">\n//                 <div className=\"profile-info row\">\n//                     <div className=\"profile-image col-4\">\n//                         <a href=\"#!\">\n//                             <img alt=\"\" src={this.state.profileimg} className=\"img-fluid avatar-image\"/>\n//                         </a>\n//                     </div>\n//                     <div className=\"profile-details col-8\">\n//                         <h3>\n//                             <a href=\"#!\">{this.state.profilename}</a>\n//                             <span className=\"profile-status online\"></span>\n//                         </h3>\n//                         <p className=\"profile-title\">{this.state.profileposition}</p>\n//                     </div>\n//                 </div>\n//                     <Nav className=\"navigation\">\n//                         {\n//                             this.props.routes.map((prop,key) => {\n//                                 if(prop.redirect)\n//                                     return null;\n//                                 if(prop.type === \"child\")\n//                                     return null;\n//                                 if(prop.type === \"navgroup\")\n//                                     return ( \n//                                       <Navmenugroup name={prop.name} key={key}>\n//                                            <Navmenugroup name={prop.name} key={key}>\n//                                             </Navmenugroup>\n//                                       </Navmenugroup>\n//                                     );\n//                                 if(prop.type === \"dropdown\")\n//                                     return ( \n//                                         <li className={(prop.parentid) + \" \" + (( ( (prop.parentid === currentmenu) && (prop.parentid !== \"\") && (prop.parentid !== \"multipurpose\") ) || (this.state.opendd === prop.name)) ? 'active': '') + ' nav-parent '} data-toggle=\"collapse\" key={key}>\n//                                             <a to={prop.path} className=\"nav-link\" onClick={() => this.handleOpendd(prop.name)} href=\"#!\">\n//                                                         <i className={\"i-\"+prop.icon}></i>\n//                                                         <p>{prop.name}</p>\n//                                                         <span className=\"badge\">{prop.badge}</span>\n//                                                         <span className={\"arrow i-arrow-left\"}></span>\n//                                             </a>\n//                                             { children(prop.child, prop.parentid) }\n//                                         </li>\n//                                     );\n//                                 if(prop.type === \"dropdown-backup\")\n//                                     return ( \n//                                       <Navmenudropdown name={prop.name} icon={prop.icon} path={prop.path} badge={prop.badge} child={prop.child} key={key} openclass={this.state.opendd === prop.name ? 'activethis': ''}  onClick={() => this.handleOpendd(prop.name)}>\n//                                       </Navmenudropdown>\n//                                     );\n//                                 return (\n//                                     <li className={this.activeRoute(prop.path) + ' nav-parent '} key={key} onClick={() => this.handleOpendd(prop.name)}>\n//                                         <NavLink to={prop.path} className=\"nav-link\" activeClassName=\"active\">\n//                                             <i className={\"i-\"+prop.icon}></i>\n//                                             <p>{prop.name}</p>\n//                                             <span className=\"badge\">{prop.badge}</span>\n//                                         </NavLink>\n//                                   </li>\n//                                 );\n//                             })\n//                         }\n//                     </Nav>\n//                 </div>\n//             </div>\n//         );\n//     }\n// }\n// export default Sidebar;","map":{"version":3,"sources":["C:\\Users\\ASUS\\Desktop\\Zest-Package-1.1.0\\zestreact-app\\src\\components\\common\\Sidebar\\Sidebar.jsx"],"names":[],"mappingssourcesContent":["// import React from 'react';\n// import { NavLink } from 'react-router-dom';\n// import { Nav } from 'reactstrap';\n\n// import { Navmenudropdown } from 'components';\n// import { Navmenugroup } from 'components';\n\n// // javascript plugin used to create scrollbars on windows\n// import PerfectScrollbar from 'perfect-scrollbar';\n// //import useravatar from \"assets/img/profile.jpg\";\n// import logofull from \"assets/img/logo-full2.png\";\n// import logomini from \"assets/img/logo-mini.png\";\n// import logofulldark from \"assets/img/logo-full-dark.png\";\n// import logominidark from \"assets/img/logo-mini-dark.png\";\n\n// var ps;\n// var currentmenu = \"notset\";\n\n// var IMGDIR = process.env.REACT_APP_IMGDIR;\n\n// class Sidebar extends React.Component{\n//     constructor(props){\n//         super(props);\n//         this.activeRoute.bind(this);\n//         this.state = {\n//           opendd: '',\n//           openmenu: 'none',\n//           profilename: 'Eric Nelson',\n//           profileimg: IMGDIR+'/images/profile/profile.jpg',\n//           profileposition: 'Web Developer',\n//         };\n//         this.handleOpendd = this.handleOpendd.bind(this);\n//         this.handlecurrent = this.handlecurrent.bind(this);\n\n//     }\n\n//     handlecurrent(currentmenu) {   \n//        //console.log(\"handlecurrent\"+currentmenu);\n//        if(this.state.opendd !== \"\"){\n//            currentmenu = \"\"; \n//        }\n//     }\n\n//     handleOpendd(open) {  \n//         currentmenu = \"\";\n//         if(this.state.opendd === open){\n//             this.setState({     \n//                 opendd: ''    \n//             });  \n//         } else {\n//             this.setState({     \n//                 opendd: open    \n//             });  \n//         }\n//         //currentmenu = \"\";\n//         //console.log(open + this.state.opendd);\n//     }\n    \n\n//     // verifies if routeName is the one active (in browser input)\n//     activeRoute(routeName) {\n//         return this.props.location.pathname.indexOf(routeName) > -1 ? ' active' : '';\n//     }\n//     componentDidMount(){\n\n//         if(this.props.admintype === 'general'){\n//             this.setState({     \n//                 profileposition: 'IoT Developer',\n//                 profileimg: IMGDIR+'/images/profile/profile-general2.jpg',\n//                 profilename: 'Đặng Đức Châu'\n//             });  \n//         } else if(this.props.admintype === 'hospital'){\n//             this.setState({     \n//                 profileposition: 'Surgeon',\n//                 profileimg: IMGDIR+'/images/profile/profile-hospital.jpg',    \n//                 profilename: 'Dianna Austin'\n//             });  \n//         } else if(this.props.admintype === 'university'){\n//             this.setState({     \n//                 profileposition: 'IoT Developer',\n//                 profileimg: IMGDIR+'/images/profile/profile-general2.jpg',\n//                 profilename: 'Đặng Đức Châu'\n//             });  \n//         } else if(this.props.admintype === 'crm'){\n//             this.setState({     \n//                 profileposition: 'Customer',\n//                 profilename: 'Rick  Woods',\n//                 profileimg: IMGDIR+'/images/profile/profile-crm.jpg'    \n//             });  \n//         } else if(this.props.admintype === 'music'){\n//             this.setState({     \n//                 profileposition: 'Singer',\n//                 profilename: 'Kerry Flores',\n//                 profileimg: IMGDIR+'/images/profile/profile-music.jpg'    \n//             });  \n//         } else if(this.props.admintype === 'blog'){\n//             this.setState({     \n//                 profileposition: 'Editor',\n//                 profilename: 'Alice Gross',\n//                 profileimg: IMGDIR+'/images/profile/profile-blog.jpg'    \n//             });  \n//         } else if(this.props.admintype === 'ecommerce'){\n//             this.setState({     \n//                 profileposition: 'Vendor',\n//                 profilename: 'Jake  Daniel',\n//                 profileimg: IMGDIR+'/images/profile/profile-ecommerce.jpg'    \n//             });  \n//         } else if(this.props.admintype === 'freelance'){\n//             this.setState({     \n//                 profileposition: 'Designer',\n//                 profilename: 'Eric Nelson',\n//                 profileimg: IMGDIR+'/images/profile/profile-freelance.jpg'    \n//             });  \n//         } else if(this.props.admintype === 'social'){\n//             this.setState({     \n//                 profileposition: 'Artist',\n//                 profilename: 'Penny Taylor',\n//                 profileimg: IMGDIR+'/images/profile/profile-social.jpg'    \n//             });  \n//         } else {\n//             this.setState({     \n//                 profileposition: 'Web Developer',\n//                 profilename: 'Nancy Spencer',\n//                 profileimg: IMGDIR+'/images/profile/profile-general.jpg'    \n//             });  \n//         }\n\n//         if(navigator.platform.indexOf('Win') > -1){\n//             ps = new PerfectScrollbar(this.refs.sidebar,{suppressScrollX: true, suppressScrollY: false});\n//         }\n\n//         //console.log(this.props.location.pathname);\n\n\n//     }\n//     componentWillUnmount(){\n//         if(navigator.platform.indexOf('Win') > -1){\n//             ps.destroy();\n//         }\n//     }\n//     render(){\n        \n//         const children = (child, parent) => {\n//             var links = [];\n//             if (child) {\n//                 for (var i = 0; i < child.length; i++) {\n//                     links.push(\n//                         <li key={i}>\n//                             <NavLink to={child[i].path} className=\"nav-link\" activeClassName=\"active\">\n//                                 <span>{child[i].name}</span>\n//                             </NavLink>\n//                         </li>\n//                     );\n//                     //console.log(child[i].parent + this.props.location.pathname + child[i].path);\n//                     if(this.props.location.pathname === child[i].path){\n//                         //console.log(\"match found \" + child[i].parent);\n//                         if(currentmenu === \"notset\" && this.state.opendd === \"\"){\n//                             currentmenu = parent; //child[i].parent;\n//                         }\n//                     }\n//                     if(this.props.location.pathname === \"/\"){\n//                         currentmenu = \"dashboards\";\n//                     }\n//                 }\n\n//                 //console.log(currentmenu);\n//                 //console.log(this.props.location.pathname);\n//                 //console.log(parent);\n//                 return <Nav>{links}</Nav>\n//             }\n//         }\n        \n\n\n//         return (\n//             <div className=\"sidebar menubar\" data-color=\"black\">\n\n//                 <div className=\"logo\">\n//                     <a href=\"/\" className=\"logo-mini\">\n//                         <div className=\"logo-img\">\n//                             <img src={logomini} alt=\"react-logo\" className=\"light-logo\" />\n//                             <img src={logominidark} alt=\"react-logo\" className=\"dark-logo\"/>\n//                         </div>\n//                     </a>\n//                     <a href=\"/\" className=\"logo-full\">\n//                             <img src={logofull} alt=\"react-logo\" className=\"light-logo\"/>\n//                             <img src={logofulldark} alt=\"react-logo\" className=\"dark-logo\"/>\n//                     </a>\n//                 </div> \n                \n//                 <div className=\"sidebar-wrapper\" ref=\"sidebar\">\n//                 <div className=\"profile-info row\">\n//                     <div className=\"profile-image col-4\">\n//                         <a href=\"#!\">\n//                             <img alt=\"\" src={this.state.profileimg} className=\"img-fluid avatar-image\"/>\n//                         </a>\n//                     </div>\n//                     <div className=\"profile-details col-8\">\n//                         <h3>\n//                             <a href=\"#!\">{this.state.profilename}</a>\n//                             <span className=\"profile-status online\"></span>\n//                         </h3>\n//                         <p className=\"profile-title\">{this.state.profileposition}</p>\n//                     </div>\n//                 </div>\n\n//                     <Nav className=\"navigation\">\n//                         {\n//                             this.props.routes.map((prop,key) => {\n//                                 if(prop.redirect)\n//                                     return null;\n//                                 if(prop.type === \"child\")\n//                                     return null;\n//                                 if(prop.type === \"navgroup\")\n//                                     return ( \n//                                       <Navmenugroup name={prop.name} key={key}>\n//                                            <Navmenugroup name={prop.name} key={key}>\n                                                \n//                                             </Navmenugroup>\n//                                       </Navmenugroup>\n//                                     );\n//                                 if(prop.type === \"dropdown\")\n//                                     return ( \n\n//                                         <li className={(prop.parentid) + \" \" + (( ( (prop.parentid === currentmenu) && (prop.parentid !== \"\") && (prop.parentid !== \"multipurpose\") ) || (this.state.opendd === prop.name)) ? 'active': '') + ' nav-parent '} data-toggle=\"collapse\" key={key}>\n//                                             <a to={prop.path} className=\"nav-link\" onClick={() => this.handleOpendd(prop.name)} href=\"#!\">\n//                                                         <i className={\"i-\"+prop.icon}></i>\n//                                                         <p>{prop.name}</p>\n//                                                         <span className=\"badge\">{prop.badge}</span>\n//                                                         <span className={\"arrow i-arrow-left\"}></span>\n//                                             </a>\n//                                             { children(prop.child, prop.parentid) }\n//                                         </li>\n\n//                                     );\n\n//                                 if(prop.type === \"dropdown-backup\")\n//                                     return ( \n//                                       <Navmenudropdown name={prop.name} icon={prop.icon} path={prop.path} badge={prop.badge} child={prop.child} key={key} openclass={this.state.opendd === prop.name ? 'activethis': ''}  onClick={() => this.handleOpendd(prop.name)}>\n//                                       </Navmenudropdown>\n//                                     );\n//                                 return (\n//                                     <li className={this.activeRoute(prop.path) + ' nav-parent '} key={key} onClick={() => this.handleOpendd(prop.name)}>\n//                                         <NavLink to={prop.path} className=\"nav-link\" activeClassName=\"active\">\n//                                             <i className={\"i-\"+prop.icon}></i>\n//                                             <p>{prop.name}</p>\n//                                             <span className=\"badge\">{prop.badge}</span>\n//                                         </NavLink>\n//                                   </li>\n//                                 );\n//                             })\n\n//                         }\n\n//                     </Nav>\n                    \n//                 </div>\n\n\n\n//             </div>\n//         );\n//     }\n// }\n\n// export default Sidebar;\n"]},"metadata":{},"sourceType":"module"}