{"ast":null,"code":"// ##############################\n// // // Function that converts a hex color number to a RGB color number\n// #############################\n\n/*function hexToRGB(hex, alpha) {\n    var r = parseInt(hex.slice(1, 3), 16),\n    g = parseInt(hex.slice(3, 5), 16),\n    b = parseInt(hex.slice(5, 7), 16);\n\n    if (alpha) {\n        return \"rgba(\" + r + \", \" + g + \", \" + b + \", \" + alpha + \")\";\n    } else {\n        return \"rgb(\" + r + \", \" + g + \", \" + b + \")\";\n    }\n}*/\n// ##############################\n// // // general variables for charts\n// #############################\n//const primaryColor = \"#26a69a\";\nvar accentColor = \"#ff8a65\"; //const chartColor = \"#FFFFFF\";\n// ##############################\n// // // Dashboard view - Bar Chart - Card\n// #############################\n\nvar playlistCharts = {\n  data: function data(canvas) {\n    var ctx = canvas.getContext(\"2d\");\n    var gradientFill = ctx.createLinearGradient(0, 170, 0, 50);\n    gradientFill.addColorStop(0, accentColor);\n    gradientFill.addColorStop(1, accentColor);\n    return {\n      labels: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n      datasets: [{\n        label: \"Progress\",\n        backgroundColor: gradientFill,\n        borderColor: accentColor,\n        pointBorderColor: \"#FFF\",\n        pointBackgroundColor: accentColor,\n        pointBorderWidth: 2,\n        pointHoverRadius: 4,\n        pointHoverBorderWidth: 1,\n        pointRadius: 4,\n        fill: true,\n        borderWidth: 1,\n        data: [50, 39, 66, 76, 23, 55, 80, 45, 68, 80, 43, 55]\n      }]\n    };\n  },\n  options: {\n    maintainAspectRatio: false,\n    legend: {\n      display: false\n    },\n    tooltips: {\n      bodySpacing: 4,\n      mode: \"nearest\",\n      intersect: 0,\n      position: \"nearest\",\n      xPadding: 10,\n      yPadding: 10,\n      caretPadding: 10\n    },\n    responsive: 1,\n    scales: {\n      yAxes: [{\n        display: 0,\n        ticks: {\n          display: false\n        },\n        gridLines: {\n          color: \"rgba(0, 0, 0, 0.01)\",\n          zeroLineColor: \"transparent\",\n          drawTicks: false,\n          display: false,\n          drawBorder: false\n        }\n      }],\n      xAxes: [{\n        categoryPercentage: 0.6,\n        barPercentage: 0.5,\n        maxBarThickness: 8,\n        display: 0,\n        ticks: {\n          display: false\n        },\n        gridLines: {\n          color: \"rgba(0, 0, 0, 0.01)\",\n          zeroLineColor: \"transparent\",\n          drawTicks: false,\n          display: false,\n          drawBorder: false\n        }\n      }]\n    },\n    layout: {\n      padding: {\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0\n      }\n    }\n  }\n};\nmodule.exports = {\n  playlistCharts: playlistCharts // Chart for Dashboard view - 24 Hours Performance Card\n\n};","map":{"version":3,"sources":["C:\\Users\\ASUS\\Desktop\\Zest-Package-1.1.0\\zestreact-app\\src\\variables\\music\\playlists-charts.jsx"],"names":["accentColor","playlistCharts","data","canvas","ctx","getContext","gradientFill","createLinearGradient","addColorStop","labels","datasets","label","backgroundColor","borderColor","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBorderWidth","pointRadius","fill","borderWidth","options","maintainAspectRatio","legend","display","tooltips","bodySpacing","mode","intersect","position","xPadding","yPadding","caretPadding","responsive","scales","yAxes","ticks","gridLines","color","zeroLineColor","drawTicks","drawBorder","xAxes","categoryPercentage","barPercentage","maxBarThickness","layout","padding","left","right","top","bottom","module","exports"],"mappings":"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","sourcesContent":["// ##############################\n// // // Function that converts a hex color number to a RGB color number\n// #############################\n/*function hexToRGB(hex, alpha) {\n    var r = parseInt(hex.slice(1, 3), 16),\n    g = parseInt(hex.slice(3, 5), 16),\n    b = parseInt(hex.slice(5, 7), 16);\n\n    if (alpha) {\n        return \"rgba(\" + r + \", \" + g + \", \" + b + \", \" + alpha + \")\";\n    } else {\n        return \"rgb(\" + r + \", \" + g + \", \" + b + \")\";\n    }\n}*/\n\n// ##############################\n// // // general variables for charts\n// #############################\n//const primaryColor = \"#26a69a\";\nconst accentColor = \"#ff8a65\";\n//const chartColor = \"#FFFFFF\";\n\n// ##############################\n// // // Dashboard view - Bar Chart - Card\n// #############################\n\nconst playlistCharts = {\n    data: (canvas) => {\n        var ctx = canvas.getContext(\"2d\");\n        var gradientFill = ctx.createLinearGradient(0, 170, 0, 50);\n        gradientFill.addColorStop(0, accentColor);\n        gradientFill.addColorStop(1, accentColor);\n        return {\n            labels :[\n                \"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"\n            ],\n            datasets: [{\n                label: \"Progress\",\n                backgroundColor: gradientFill,\n                borderColor: accentColor,\n                pointBorderColor: \"#FFF\",\n                pointBackgroundColor: accentColor,\n                pointBorderWidth: 2,\n                pointHoverRadius: 4,\n                pointHoverBorderWidth: 1,\n                pointRadius: 4,\n                fill: true,\n                borderWidth: 1,\n                data: [50,39,66,76,23,55,80,45,68,80,43,55]\n            }]\n        }\n    },\n    options: {\n        maintainAspectRatio: false,\n        legend: {\n            display: false\n        },\n        tooltips: {\n            bodySpacing: 4,\n            mode:\"nearest\",\n            intersect: 0,\n            position:\"nearest\",\n            xPadding:10,\n            yPadding:10,\n            caretPadding:10\n        },\n        responsive: 1,\n        scales: {\n            yAxes: [{\n                display:0,\n                ticks: {\n                    display: false\n                },\n                gridLines: {\n                    color: \"rgba(0, 0, 0, 0.01)\",\n            zeroLineColor: \"transparent\",\n                    drawTicks: false,\n                    display: false,\n                    drawBorder: false\n                }\n            }],\n            xAxes: [{\n                categoryPercentage: 0.6,\n                barPercentage: 0.5,\n                maxBarThickness: 8,\n                display:0,\n                ticks: {\n                    display: false\n                },\n                gridLines: {\n                    color: \"rgba(0, 0, 0, 0.01)\",\n            zeroLineColor: \"transparent\",\n                    drawTicks: false,\n                    display: false,\n                    drawBorder: false\n                }\n            }]\n        },\n        layout:{\n            padding:{left:0,right:0,top:0,bottom:0}\n        }\n    },\n}\n\nmodule.exports = {\n    playlistCharts, // Chart for Dashboard view - 24 Hours Performance Card\n}\n"]},"metadata":{},"sourceType":"module"}