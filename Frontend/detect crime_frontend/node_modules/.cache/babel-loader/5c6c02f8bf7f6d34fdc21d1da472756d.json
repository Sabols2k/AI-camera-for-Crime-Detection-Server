{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\Zest-Package-1.1.0\\\\zestreact-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\Zest-Package-1.1.0\\\\zestreact-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport axios from \"axios\";\naxios.defaults.withCredentials = true;\nvar API_URL = 'http://localhost:3000/auth'; // set token to the axios\n\nexport var setAuthToken = function setAuthToken(token) {\n  if (token) {\n    axios.defaults.headers.common['Authorization'] = \"Bearer \".concat(token);\n  } else {\n    delete axios.defaults.headers.common['Authorization'];\n  }\n}; // verify refresh token to generate new access token if refresh token is present\n\nexport var verifyTokenService =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee() {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return axios.post(\"\".concat(API_URL, \"/verifytoken\"));\n\n          case 3:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 6:\n            _context.prev = 6;\n            _context.t0 = _context[\"catch\"](0);\n            return _context.abrupt(\"return\", {\n              error: true,\n              response: _context.t0.response\n            });\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 6]]);\n  }));\n\n  return function verifyTokenService() {\n    return _ref.apply(this, arguments);\n  };\n}(); // user login API to validate the credential\n\nexport var userLoginService =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(username, password) {\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return axios.post(\"\".concat(API_URL, \"/users/signin\"), {\n              username: username,\n              password: password\n            });\n\n          case 3:\n            return _context2.abrupt(\"return\", _context2.sent);\n\n          case 6:\n            _context2.prev = 6;\n            _context2.t0 = _context2[\"catch\"](0);\n            return _context2.abrupt(\"return\", {\n              error: true,\n              response: _context2.t0.response\n            });\n\n          case 9:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[0, 6]]);\n  }));\n\n  return function userLoginService(_x, _x2) {\n    return _ref2.apply(this, arguments);\n  };\n}(); // manage user logout\n\nexport var userLogoutService =\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee3() {\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            _context3.next = 3;\n            return axios.post(\"\".concat(API_URL, \"/users/logout\"));\n\n          case 3:\n            return _context3.abrupt(\"return\", _context3.sent);\n\n          case 6:\n            _context3.prev = 6;\n            _context3.t0 = _context3[\"catch\"](0);\n            return _context3.abrupt(\"return\", {\n              error: true,\n              response: _context3.t0.response\n            });\n\n          case 9:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[0, 6]]);\n  }));\n\n  return function userLogoutService() {\n    return _ref3.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["C:\\Users\\ASUS\\Desktop\\Zest-Package-1.1.0\\zestreact-app\\src\\views\\general\\services\\auth.js"],"names":["axios","defaults","withCredentials","API_URL","setAuthToken","token","headers","common","verifyTokenService","post","error","response","userLoginService","username","password","userLogoutService"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACAA,KAAK,CAACC,QAAN,CAAeC,eAAf,GAAiC,IAAjC;AAEA,IAAMC,OAAO,GAAG,4BAAhB,C,CAEA;;AACA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAC,KAAK,EAAI;AACnC,MAAIA,KAAJ,EAAW;AACTL,IAAAA,KAAK,CAACC,QAAN,CAAeK,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,qBAA2DF,KAA3D;AACD,GAFD,MAGK;AACH,WAAOL,KAAK,CAACC,QAAN,CAAeK,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,CAAP;AACD;AACF,CAPM,C,CASP;;AACA,OAAO,IAAMC,kBAAkB;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEjBR,KAAK,CAACS,IAAN,WAAcN,OAAd,kBAFiB;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,6CAIvB;AACLO,cAAAA,KAAK,EAAE,IADF;AAELC,cAAAA,QAAQ,EAAE,YAAIA;AAFT,aAJuB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAlBH,kBAAkB;AAAA;AAAA;AAAA,GAAxB,C,CAWP;;AACA,OAAO,IAAMI,gBAAgB;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAG,kBAAOC,QAAP,EAAiBC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEfd,KAAK,CAACS,IAAN,WAAcN,OAAd,oBAAsC;AAAEU,cAAAA,QAAQ,EAARA,QAAF;AAAYC,cAAAA,QAAQ,EAARA;AAAZ,aAAtC,CAFe;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,8CAIrB;AACLJ,cAAAA,KAAK,EAAE,IADF;AAELC,cAAAA,QAAQ,EAAE,aAAIA;AAFT,aAJqB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAhBC,gBAAgB;AAAA;AAAA;AAAA,GAAtB,C,CAWP;;AACA,OAAO,IAAMG,iBAAiB;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEhBf,KAAK,CAACS,IAAN,WAAcN,OAAd,mBAFgB;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,8CAItB;AACLO,cAAAA,KAAK,EAAE,IADF;AAELC,cAAAA,QAAQ,EAAE,aAAIA;AAFT,aAJsB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAjBI,iBAAiB;AAAA;AAAA;AAAA,GAAvB","sourcesContent":["import axios from \"axios\";\r\naxios.defaults.withCredentials = true;\r\n \r\nconst API_URL = 'http://localhost:3000/auth';\r\n \r\n// set token to the axios\r\nexport const setAuthToken = token => {\r\n  if (token) {\r\n    axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n  }\r\n  else {\r\n    delete axios.defaults.headers.common['Authorization'];\r\n  }\r\n}\r\n \r\n// verify refresh token to generate new access token if refresh token is present\r\nexport const verifyTokenService = async () => {\r\n  try {\r\n    return await axios.post(`${API_URL}/verifytoken`);\r\n  } catch (err) {\r\n    return {\r\n      error: true,\r\n      response: err.response\r\n    };\r\n  }\r\n}\r\n \r\n// user login API to validate the credential\r\nexport const userLoginService = async (username, password) => {\r\n  try {\r\n    return await axios.post(`${API_URL}/users/signin`, { username, password });\r\n  } catch (err) {\r\n    return {\r\n      error: true,\r\n      response: err.response\r\n    };\r\n  }\r\n}\r\n \r\n// manage user logout\r\nexport const userLogoutService = async () => {\r\n  try {\r\n    return await axios.post(`${API_URL}/users/logout`);\r\n  } catch (err) {\r\n    return {\r\n      error: true,\r\n      response: err.response\r\n    };\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}