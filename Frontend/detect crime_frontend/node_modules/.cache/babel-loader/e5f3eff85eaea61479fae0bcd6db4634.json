{"ast":null,"code":"/*!\n * calendar: a port of the calendar module from Python\n * Copyright(c) 2011 Luciano Ramalho <luciano@ramalho.org>\n * MIT Licensed\n */\nexports.version = '0.1.0';\n\nvar CalendarException = function CalendarException(message) {\n  this.message = message;\n\n  this.toString = function () {\n    return this.constructor.name + \": \" + this.message;\n  };\n};\n\nvar Calendar = function Calendar(firstWeekDay) {\n  //properties\n  this.firstWeekDay = firstWeekDay || 0; // 0 = Sunday\n};\n\nCalendar.prototype = {\n  constructor: Calendar,\n  weekStartDate: function weekStartDate(date) {\n    var startDate = new Date(date.getTime());\n\n    while (startDate.getDay() !== this.firstWeekDay) {\n      startDate.setDate(startDate.getDate() - 1);\n    }\n\n    return startDate;\n  },\n  monthDates: function monthDates(year, month, dayFormatter, weekFormatter) {\n    if (typeof year !== \"number\" || year < 1970) {\n      throw new CalendarException('year must be a number >= 1970');\n    }\n\n    ;\n\n    if (typeof month !== \"number\" || month < 0 || month > 11) {\n      throw new CalendarException('month must be a number (Jan is 0)');\n    }\n\n    ;\n    var weeks = [],\n        week = [],\n        i = 0,\n        date = this.weekStartDate(new Date(year, month, 1));\n\n    do {\n      for (i = 0; i < 7; i++) {\n        week.push(dayFormatter ? dayFormatter(date) : date);\n        date = new Date(date.getTime());\n        date.setDate(date.getDate() + 1);\n      }\n\n      weeks.push(weekFormatter ? weekFormatter(week) : week);\n      week = [];\n    } while (date.getMonth() <= month && date.getFullYear() === year);\n\n    return weeks;\n  },\n  monthDays: function monthDays(year, month) {\n    var getDayOrZero = function getDayOrZero(date) {\n      return date.getMonth() === month ? date.getDate() : 0;\n    };\n\n    return this.monthDates(year, month, getDayOrZero);\n  },\n  monthText: function monthText(year, month) {\n    if (typeof year === \"undefined\") {\n      var now = new Date();\n      year = now.getFullYear();\n      month = now.getMonth();\n    }\n\n    ;\n\n    var getDayOrBlank = function getDayOrBlank(date) {\n      var s = date.getMonth() === month ? date.getDate().toString() : \"  \";\n\n      while (s.length < 2) {\n        s = \" \" + s;\n      }\n\n      return s;\n    };\n\n    var weeks = this.monthDates(year, month, getDayOrBlank, function (week) {\n      return week.join(\" \");\n    });\n    return weeks.join(\"\\n\");\n  }\n};\nvar months = \"JAN FEB MAR APR MAY JUN JUL AUG SEP OCT NOV DEC\".split(\" \");\n\nfor (var i = 0; i < months.length; i++) {\n  Calendar[months[i]] = i;\n}\n\nexports.Calendar = Calendar;","map":null,"metadata":{},"sourceType":"script"}