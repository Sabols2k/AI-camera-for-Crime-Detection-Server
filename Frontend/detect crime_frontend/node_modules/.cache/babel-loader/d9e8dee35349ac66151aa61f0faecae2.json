{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar ReactSession = function () {\n  var SESSION_OBJECT_NAME = \"__react_session__\";\n  var COOKIE_EXPIRATION_DAYS = 7; // TODO: Make this a prop?\n\n  var SessionWriter = null;\n  var sessionData = {};\n\n  var get = function get(key) {\n    return SessionWriter.get(key);\n  };\n\n  var set = function set(key, value) {\n    SessionWriter.set(key, value);\n  };\n\n  var remove = function remove(key) {\n    SessionWriter.remove(key);\n  };\n\n  var setStoreType = function setStoreType(storeType) {\n    if (!['memory', 'cookie', 'localstorage', 'sessionstorage'].includes(storeType.toLowerCase())) {\n      throw \"Unknown store type\";\n    }\n\n    SessionWriter = getSessionWriter(storeType);\n  };\n\n  var getSessionWriter = function getSessionWriter(storeType) {\n    switch (storeType.toLowerCase()) {\n      case \"memory\":\n        return MemoryWriter;\n\n      case \"cookie\":\n        return CookieWriter;\n\n      case \"localstorage\":\n        return LocalStorageWriter;\n\n      case \"sessionstorage\":\n        return SessionStorageWriter;\n\n      default:\n        return MemoryWriter;\n    }\n  };\n\n  var MemoryWriter = {\n    set: function set(key, value) {\n      sessionData[key] = value;\n    },\n    get: function get(key) {\n      return sessionData[key];\n    },\n    remove: function remove(key) {\n      if (sessionData.hasOwnProperty(key)) {\n        delete sessionData[key];\n      }\n    }\n  };\n  var LocalStorageWriter = {\n    set: function set(key, value) {\n      setItem(localStorage, key, value);\n    },\n    get: function get(key) {\n      return getItem(localStorage, key);\n    },\n    remove: function remove(key) {\n      removeItem(localStorage, key);\n    }\n  };\n  var SessionStorageWriter = {\n    set: function set(key, value) {\n      setItem(sessionStorage, key, value);\n    },\n    get: function get(key) {\n      return getItem(sessionStorage, key);\n    },\n    remove: function remove(key) {\n      removeItem(sessionStorage, key);\n    }\n  };\n  var CookieWriter = {\n    set: function set(key, value) {\n      setCookieParam(key, value, COOKIE_EXPIRATION_DAYS);\n    },\n    get: function get(key) {\n      return getCookieParam(key);\n    },\n    remove: function remove(key) {\n      deleteCookieParam(key);\n    }\n  };\n  SessionWriter = MemoryWriter;\n\n  var setItem = function setItem(storageObject, key, value) {\n    var item = getStorageItem(storageObject);\n    item[key] = value;\n    setStorageItem(storageObject, item);\n  };\n\n  var getItem = function getItem(storageObject, key) {\n    var item = getStorageItem(storageObject);\n    return item[key];\n  };\n\n  var removeItem = function removeItem(storageObject, key) {\n    var item = getStorageItem(storageObject);\n    delete item[key];\n    setStorageItem(storageObject, item);\n  };\n\n  var getStorageItem = function getStorageItem(storageObject) {\n    var item = storageObject.getItem(SESSION_OBJECT_NAME);\n    return item ? JSON.parse(item) : {};\n  };\n\n  var setStorageItem = function setStorageItem(storageObject, item) {\n    storageObject.setItem(SESSION_OBJECT_NAME, JSON.stringify(item));\n  };\n\n  var getUpdatedTime = function getUpdatedTime(numDays) {\n    var now = new Date();\n    now.setTime(now.getTime() + numDays * 24 * 60 * 60 * 1000);\n    return now.toUTCString();\n  };\n\n  var setCookieParam = function setCookieParam(key, value, numDays) {\n    var expires = \"expires=\" + getUpdatedTime(COOKIE_EXPIRATION_DAYS);\n    var existingCookie = getCookie(SESSION_OBJECT_NAME);\n    var cookieJson = {};\n\n    if (existingCookie) {\n      cookieJson = JSON.parse(existingCookie);\n    }\n\n    cookieJson[key] = value;\n    var cookieStr = SESSION_OBJECT_NAME + \"=\" + JSON.stringify(cookieJson) + \";\";\n    cookieStr += expires + \";path=/\";\n    document.cookie = cookieStr;\n  };\n\n  var getCookieParam = function getCookieParam(key) {\n    var cookieParam = JSON.parse(getCookie(SESSION_OBJECT_NAME));\n    return cookieParam[key];\n  };\n\n  var getCookie = function getCookie(cookieName) {\n    var name = cookieName + \"=\";\n    var decodedCookie = decodeURIComponent(document.cookie);\n    var cookies = decodedCookie.split(';');\n\n    for (var i = 0; i < cookies.length; i++) {\n      var cookie = cookies[i];\n\n      while (cookie.charAt(0) == ' ') {\n        cookie = cookie.substring(1);\n      }\n\n      if (cookie.indexOf(name) == 0) {\n        return cookie.substring(name.length, cookie.length);\n      }\n    }\n\n    return \"\";\n  };\n\n  var deleteCookieParam = function deleteCookieParam(key) {\n    var expires = \"expires=\" + getUpdatedTime(COOKIE_EXPIRATION_DAYS);\n    var existingCookie = getCookie(SESSION_OBJECT_NAME);\n    var cookieJson = {};\n\n    if (existingCookie) {\n      cookieJson = JSON.parse(existingCookie);\n      delete cookieJson[key];\n    }\n\n    var cookieStr = SESSION_OBJECT_NAME + \"=\" + JSON.stringify(cookieJson) + \";\";\n    cookieStr += expires + \";path=/\";\n    document.cookie = cookieStr;\n  };\n\n  return {\n    getCookie: getCookie,\n    setStoreType: setStoreType,\n    remove: remove,\n    get: get,\n    set: set\n  };\n}();\n\nvar _default = ReactSession;\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}