{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\Zest-Package-1.1.0\\\\zestreact-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\Zest-Package-1.1.0\\\\zestreact-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\Zest-Package-1.1.0\\\\zestreact-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\Zest-Package-1.1.0\\\\zestreact-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\Zest-Package-1.1.0\\\\zestreact-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\Zest-Package-1.1.0\\\\zestreact-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\Zest-Package-1.1.0\\\\zestreact-app\\\\src\\\\layouts\\\\PageLayouts\\\\Layout1.jsx\";\nimport React from 'react'; // javascript plugin used to create scrollbars on windows\n// import PerfectScrollbar from 'perfect-scrollbar';\n\nimport { Route, Switch } from 'react-router-dom';\nimport { Header, Footer, Sidebar, ChatSidebar, Stylebar } from 'components';\nimport dashboardRoutes from 'routes/general.jsx';\nimport { topbarStyle, menuStyle, menuType, topbarType, navWidth, chatWidth, chatType } from 'variables/settings/pagelayouts/layout1.jsx'; //var ps;\n\nvar Layout1 =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Layout1, _React$Component);\n\n  function Layout1(props) {\n    var _this;\n\n    _classCallCheck(this, Layout1);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Layout1).call(this, props));\n    _this.state = {\n      menuColor: menuStyle,\n      topbarColor: topbarStyle,\n      menuType: menuType,\n      topbarType: topbarType\n    };\n    _this.menuSettings = _this.menuSettings.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.topbarSettings = _this.topbarSettings.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Layout1, [{\n    key: \"menuSettings\",\n    value: function menuSettings(val1, val2) {\n      this.setState({\n        menuColor: val1,\n        menuType: val2\n      });\n    }\n  }, {\n    key: \"topbarSettings\",\n    value: function topbarSettings(val1, val2) {\n      this.setState({\n        topbarColor: val1,\n        topbarType: val2\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      /*if(navigator.platform.indexOf('Win') > -1){\n          ps = new PerfectScrollbar(this.refs.mainPanel);\n          document.body.classList.toggle(\"perfect-scrollbar-on\");\n      }*/\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      /*if(navigator.platform.indexOf('Win') > -1){\n          ps.destroy();\n          document.body.classList.toggle(\"perfect-scrollbar-on\");\n      }*/\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(e) {\n      if (e.history.action === \"PUSH\") {\n        this.refs.mainPanel.scrollTop = 0;\n        document.scrollingElement.scrollTop = 0;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"wrapper\",\n        ref: \"themeWrapper\",\n        \"data-menu\": this.state.menuColor,\n        \"data-topbar\": this.state.topbarColor,\n        \"data-menutype\": this.state.menuType,\n        \"data-topbartype\": this.state.topbarType,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(Header, Object.assign({}, this.props, {\n        navtype: navWidth,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      })), React.createElement(Sidebar, Object.assign({}, this.props, {\n        routes: dashboardRoutes,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"main-panel\",\n        ref: \"mainPanel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, dashboardRoutes.map(function (prop, key) {\n        //console.log(this.props.location.pathname);\n        if (_this2.props.location.pathname === prop.path) {\n          return React.createElement(Route, {\n            path: prop.path,\n            component: prop.component,\n            key: key,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 78\n            },\n            __self: this\n          });\n        }\n\n        return \"\";\n      })), React.createElement(Footer, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      })), React.createElement(ChatSidebar, Object.assign({}, this.props, {\n        routes: dashboardRoutes,\n        chatwidth: chatWidth,\n        chattype: chatType,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      })), React.createElement(Stylebar, {\n        menuSettings: this.menuSettings,\n        topbarSettings: this.topbarSettings,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Layout1;\n}(React.Component);\n\nexport default Layout1;","map":{"version":3,"sources":["C:\\Users\\ASUS\\Desktop\\Zest-Package-1.1.0\\zestreact-app\\src\\layouts\\PageLayouts\\Layout1.jsx"],"names":["React","Route","Switch","Header","Footer","Sidebar","ChatSidebar","Stylebar","dashboardRoutes","topbarStyle","menuStyle","menuType","topbarType","navWidth","chatWidth","chatType","Layout1","props","state","menuColor","topbarColor","menuSettings","bind","topbarSettings","val1","val2","setState","e","history","action","refs","mainPanel","scrollTop","document","scrollingElement","map","prop","key","location","pathname","path","component","Component"],"mappings":"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","sourcesContent":["import React from 'react';\n// javascript plugin used to create scrollbars on windows\n// import PerfectScrollbar from 'perfect-scrollbar';\nimport {\n    Route,\n    Switch,\n} from 'react-router-dom';\n\nimport { Header, Footer, Sidebar, ChatSidebar, Stylebar } from 'components'\n\nimport dashboardRoutes from 'routes/general.jsx';\nimport { topbarStyle, menuStyle, menuType, topbarType, navWidth, chatWidth, chatType } from 'variables/settings/pagelayouts/layout1.jsx';\n\n//var ps;\n\nclass Layout1 extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = { \n            menuColor: menuStyle,\n            topbarColor: topbarStyle,\n            menuType: menuType,\n            topbarType: topbarType,\n        };\n        this.menuSettings = this.menuSettings.bind(this);\n        this.topbarSettings = this.topbarSettings.bind(this);\n    }\n\n    menuSettings(val1,val2) {\n        this.setState({\n          menuColor: val1,\n          menuType: val2,\n        });\n    }\n    topbarSettings(val1,val2) {\n        this.setState({\n          topbarColor: val1,\n          topbarType: val2,\n        });\n    }\n\n    componentDidMount(){\n        /*if(navigator.platform.indexOf('Win') > -1){\n            ps = new PerfectScrollbar(this.refs.mainPanel);\n            document.body.classList.toggle(\"perfect-scrollbar-on\");\n        }*/\n    }\n    componentWillUnmount(){\n        /*if(navigator.platform.indexOf('Win') > -1){\n            ps.destroy();\n            document.body.classList.toggle(\"perfect-scrollbar-on\");\n        }*/\n    }\n    componentDidUpdate(e) {\n      if(e.history.action === \"PUSH\"){\n        this.refs.mainPanel.scrollTop = 0;\n        document.scrollingElement.scrollTop = 0;\n      }\n    }\n    render(){\n        return (\n            <div className=\"wrapper\" ref=\"themeWrapper\" data-menu={this.state.menuColor} data-topbar={this.state.topbarColor} data-menutype={this.state.menuType} data-topbartype={this.state.topbarType}>\n\n\n                <Header {...this.props} navtype={navWidth}/>\n                <Sidebar {...this.props} routes={dashboardRoutes}/>\n                <div className=\"main-panel\" ref=\"mainPanel\">\n\n                                \n                \n\n                    <Switch>\n                        {\n                            dashboardRoutes.map((prop,key) => {\n                                //console.log(this.props.location.pathname);\n                                if(this.props.location.pathname === prop.path){\n                                    return (\n                                        <Route path={prop.path} component={prop.component} key={key}/>\n                                    );\n                                }\n                                return (\"\");\n                            })\n                        }\n                    </Switch>\n                    <Footer fluid/>\n                </div>\n                <ChatSidebar {...this.props} routes={dashboardRoutes} chatwidth={chatWidth}  chattype={chatType}/>\n                <Stylebar menuSettings={this.menuSettings} topbarSettings={this.topbarSettings} />\n            </div>\n        );\n    }\n}\n\nexport default Layout1;\n"]},"metadata":{},"sourceType":"module"}