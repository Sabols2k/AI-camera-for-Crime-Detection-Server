{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _createReactClass = require('create-react-class');\n\nvar _createReactClass2 = _interopRequireDefault(_createReactClass);\n\nvar _immutable = require('immutable');\n\nvar _immutable2 = _interopRequireDefault(_immutable);\n\nvar _BemMixin = require('../utils/BemMixin');\n\nvar _BemMixin2 = _interopRequireDefault(_BemMixin);\n\nvar _CustomPropTypes = require('../utils/CustomPropTypes');\n\nvar _CustomPropTypes2 = _interopRequireDefault(_CustomPropTypes);\n\nvar _PureRenderMixin = require('../utils/PureRenderMixin');\n\nvar _PureRenderMixin2 = _interopRequireDefault(_PureRenderMixin);\n\nvar _lightenDarkenColor = require('../utils/lightenDarkenColor');\n\nvar _lightenDarkenColor2 = _interopRequireDefault(_lightenDarkenColor);\n\nvar _CalendarDatePeriod = require('./CalendarDatePeriod');\n\nvar _CalendarDatePeriod2 = _interopRequireDefault(_CalendarDatePeriod);\n\nvar _CalendarHighlight = require('./CalendarHighlight');\n\nvar _CalendarHighlight2 = _interopRequireDefault(_CalendarHighlight);\n\nvar _CalendarSelection = require('./CalendarSelection');\n\nvar _CalendarSelection2 = _interopRequireDefault(_CalendarSelection);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar CalendarDate = (0, _createReactClass2.default)({\n  mixins: [_BemMixin2.default, _PureRenderMixin2.default],\n  displayName: \"CalendarDate\",\n  propTypes: {\n    date: _CustomPropTypes2.default.moment,\n    firstOfMonth: _propTypes2.default.object.isRequired,\n    isSelectedDate: _propTypes2.default.bool,\n    isSelectedRangeStart: _propTypes2.default.bool,\n    isSelectedRangeEnd: _propTypes2.default.bool,\n    isInSelectedRange: _propTypes2.default.bool,\n    isHighlightedDate: _propTypes2.default.bool,\n    isHighlightedRangeStart: _propTypes2.default.bool,\n    isHighlightedRangeEnd: _propTypes2.default.bool,\n    isInHighlightedRange: _propTypes2.default.bool,\n    highlightedDate: _propTypes2.default.object,\n    dateStates: _propTypes2.default.instanceOf(_immutable2.default.List),\n    isDisabled: _propTypes2.default.bool,\n    isToday: _propTypes2.default.bool,\n    dateRangesForDate: _propTypes2.default.func,\n    onHighlightDate: _propTypes2.default.func,\n    onUnHighlightDate: _propTypes2.default.func,\n    onSelectDate: _propTypes2.default.func\n  },\n  getInitialState: function getInitialState() {\n    return {\n      mouseDown: false\n    };\n  },\n  componentWillUnmount: function componentWillUnmount() {\n    this.isUnmounted = true;\n    document.removeEventListener('mouseup', this.mouseUp);\n    document.removeEventListener('touchend', this.touchEnd);\n  },\n  mouseUp: function mouseUp() {\n    this.props.onSelectDate(this.props.date);\n\n    if (this.isUnmounted) {\n      return;\n    }\n\n    if (this.state.mouseDown) {\n      this.setState({\n        mouseDown: false\n      });\n    }\n\n    document.removeEventListener('mouseup', this.mouseUp);\n  },\n  mouseDown: function mouseDown() {\n    this.setState({\n      mouseDown: true\n    });\n    document.addEventListener('mouseup', this.mouseUp);\n  },\n  touchEnd: function touchEnd() {\n    event.preventDefault();\n    this.props.onHighlightDate(this.props.date);\n    this.props.onSelectDate(this.props.date);\n\n    if (this.isUnmounted) {\n      return;\n    }\n\n    if (this.state.mouseDown) {\n      this.setState({\n        mouseDown: false\n      });\n    }\n\n    document.removeEventListener('touchend', this.touchEnd);\n  },\n  touchStart: function touchStart(event) {\n    event.preventDefault();\n    this.setState({\n      mouseDown: true\n    });\n    document.addEventListener('touchend', this.touchEnd);\n  },\n  mouseEnter: function mouseEnter() {\n    this.props.onHighlightDate(this.props.date);\n  },\n  mouseLeave: function mouseLeave() {\n    if (this.state.mouseDown) {\n      this.props.onSelectDate(this.props.date);\n      this.setState({\n        mouseDown: false\n      });\n    }\n\n    this.props.onUnHighlightDate(this.props.date);\n  },\n  getBemModifiers: function getBemModifiers() {\n    var _props = this.props,\n        date = _props.date,\n        firstOfMonth = _props.firstOfMonth,\n        today = _props.isToday;\n    var otherMonth = false;\n    var weekend = false;\n\n    if (date.month() !== firstOfMonth.month()) {\n      otherMonth = true;\n    }\n\n    if (date.day() === 0 || date.day() === 6) {\n      weekend = true;\n    }\n\n    return {\n      today: today,\n      weekend: weekend,\n      otherMonth: otherMonth\n    };\n  },\n  getBemStates: function getBemStates() {\n    var _props2 = this.props,\n        isSelectedDate = _props2.isSelectedDate,\n        isInSelectedRange = _props2.isInSelectedRange,\n        isInHighlightedRange = _props2.isInHighlightedRange,\n        highlighted = _props2.isHighlightedDate,\n        disabled = _props2.isDisabled;\n    var selected = isSelectedDate || isInSelectedRange || isInHighlightedRange;\n    return {\n      disabled: disabled,\n      highlighted: highlighted,\n      selected: selected\n    };\n  },\n  render: function render() {\n    var _props3 = this.props,\n        date = _props3.date,\n        dateRangesForDate = _props3.dateRangesForDate,\n        isSelectedDate = _props3.isSelectedDate,\n        isSelectedRangeStart = _props3.isSelectedRangeStart,\n        isSelectedRangeEnd = _props3.isSelectedRangeEnd,\n        isInSelectedRange = _props3.isInSelectedRange,\n        isHighlightedDate = _props3.isHighlightedDate,\n        isHighlightedRangeStart = _props3.isHighlightedRangeStart,\n        isHighlightedRangeEnd = _props3.isHighlightedRangeEnd,\n        isInHighlightedRange = _props3.isInHighlightedRange;\n    var bemModifiers = this.getBemModifiers();\n    var bemStates = this.getBemStates();\n    var pending = isInHighlightedRange;\n    var color = void 0;\n    var amColor = void 0;\n    var pmColor = void 0;\n    var states = dateRangesForDate(date);\n    var numStates = states.count();\n    var cellStyle = {};\n    var style = {};\n    var highlightModifier = void 0;\n    var selectionModifier = void 0;\n\n    if (isSelectedDate || isSelectedRangeStart && isSelectedRangeEnd || isHighlightedRangeStart && isHighlightedRangeEnd) {\n      selectionModifier = 'single';\n    } else if (isSelectedRangeStart || isHighlightedRangeStart) {\n      selectionModifier = 'start';\n    } else if (isSelectedRangeEnd || isHighlightedRangeEnd) {\n      selectionModifier = 'end';\n    } else if (isInSelectedRange || isInHighlightedRange) {\n      selectionModifier = 'segment';\n    }\n\n    if (isHighlightedDate) {\n      highlightModifier = 'single';\n    }\n\n    if (numStates === 1) {\n      // If there's only one state, it means we're not at a boundary\n      color = states.getIn([0, 'color']);\n\n      if (color) {\n        style = {\n          backgroundColor: color\n        };\n        cellStyle = {\n          borderLeftColor: (0, _lightenDarkenColor2.default)(color, -10),\n          borderRightColor: (0, _lightenDarkenColor2.default)(color, -10)\n        };\n      }\n    } else {\n      amColor = states.getIn([0, 'color']);\n      pmColor = states.getIn([1, 'color']);\n\n      if (amColor) {\n        cellStyle.borderLeftColor = (0, _lightenDarkenColor2.default)(amColor, -10);\n      }\n\n      if (pmColor) {\n        cellStyle.borderRightColor = (0, _lightenDarkenColor2.default)(pmColor, -10);\n      }\n    }\n\n    return _react2.default.createElement('td', {\n      className: this.cx({\n        element: 'Date',\n        modifiers: bemModifiers,\n        states: bemStates\n      }),\n      style: cellStyle,\n      onTouchStart: this.touchStart,\n      onMouseEnter: this.mouseEnter,\n      onMouseLeave: this.mouseLeave,\n      onMouseDown: this.mouseDown\n    }, numStates > 1 && _react2.default.createElement('div', {\n      className: this.cx({\n        element: \"HalfDateStates\"\n      })\n    }, _react2.default.createElement(_CalendarDatePeriod2.default, {\n      period: 'am',\n      color: amColor\n    }), _react2.default.createElement(_CalendarDatePeriod2.default, {\n      period: 'pm',\n      color: pmColor\n    })), numStates === 1 && _react2.default.createElement('div', {\n      className: this.cx({\n        element: \"FullDateStates\"\n      }),\n      style: style\n    }), _react2.default.createElement('span', {\n      className: this.cx({\n        element: \"DateLabel\"\n      })\n    }, date.format('D')), selectionModifier ? _react2.default.createElement(_CalendarSelection2.default, {\n      modifier: selectionModifier,\n      pending: pending\n    }) : null, highlightModifier ? _react2.default.createElement(_CalendarHighlight2.default, {\n      modifier: highlightModifier\n    }) : null);\n  }\n});\nexports.default = CalendarDate;","map":null,"metadata":{},"sourceType":"script"}