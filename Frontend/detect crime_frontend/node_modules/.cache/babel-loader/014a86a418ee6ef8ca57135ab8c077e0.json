{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _createReactClass = require('create-react-class');\n\nvar _createReactClass2 = _interopRequireDefault(_createReactClass);\n\nvar _momentRange = require('../moment-range');\n\nvar _momentRange2 = _interopRequireDefault(_momentRange);\n\nvar _calendar = require('calendar');\n\nvar _calendar2 = _interopRequireDefault(_calendar);\n\nvar _immutable = require('immutable');\n\nvar _immutable2 = _interopRequireDefault(_immutable);\n\nvar _BemMixin = require('../utils/BemMixin');\n\nvar _BemMixin2 = _interopRequireDefault(_BemMixin);\n\nvar _CustomPropTypes = require('../utils/CustomPropTypes');\n\nvar _CustomPropTypes2 = _interopRequireDefault(_CustomPropTypes);\n\nvar _isMomentRange = require('../utils/isMomentRange');\n\nvar _isMomentRange2 = _interopRequireDefault(_isMomentRange);\n\nvar _PureRenderMixin = require('../utils/PureRenderMixin');\n\nvar _PureRenderMixin2 = _interopRequireDefault(_PureRenderMixin);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nvar CalendarMonth = (0, _createReactClass2.default)({\n  mixins: [_BemMixin2.default, _PureRenderMixin2.default],\n  displayName: \"CalendarMonth\",\n  propTypes: {\n    dateComponent: _propTypes2.default.func,\n    disableNavigation: _propTypes2.default.bool,\n    enabledRange: _CustomPropTypes2.default.momentRange,\n    firstOfMonth: _CustomPropTypes2.default.moment,\n    firstOfWeek: _propTypes2.default.oneOf([0, 1, 2, 3, 4, 5, 6]),\n    hideSelection: _propTypes2.default.bool,\n    highlightedDate: _propTypes2.default.object,\n    highlightedRange: _propTypes2.default.object,\n    onMonthChange: _propTypes2.default.func,\n    onYearChange: _propTypes2.default.func,\n    value: _CustomPropTypes2.default.momentOrMomentRange,\n    locale: _propTypes2.default.string\n  },\n  setLocale: function setLocale(locale) {\n    _momentRange2.default.locale(locale);\n\n    this.WEEKDAYS = _immutable2.default.List(_momentRange2.default.weekdays()).zip(_immutable2.default.List(_momentRange2.default.weekdaysShort()));\n    this.MONTHS = _immutable2.default.List(_momentRange2.default.months());\n  },\n  componentWillMount: function componentWillMount() {\n    var locale = this.props.locale;\n    this.setLocale(locale);\n  },\n  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {\n    var locale = nextProps.locale;\n\n    if (locale !== this.props.locale) {\n      this.setLocale(locale);\n    }\n  },\n  renderDay: function renderDay(date, i) {\n    var _props = this.props,\n        CalendarDate = _props.dateComponent,\n        value = _props.value,\n        highlightedDate = _props.highlightedDate,\n        highlightedRange = _props.highlightedRange,\n        hideSelection = _props.hideSelection,\n        enabledRange = _props.enabledRange,\n        props = _objectWithoutProperties(_props, ['dateComponent', 'value', 'highlightedDate', 'highlightedRange', 'hideSelection', 'enabledRange']);\n\n    var d = (0, _momentRange2.default)(date).locale(this.props.locale);\n    var isInSelectedRange = void 0;\n    var isSelectedDate = void 0;\n    var isSelectedRangeStart = void 0;\n    var isSelectedRangeEnd = void 0;\n\n    if (!hideSelection && value && _momentRange2.default.isMoment(value) && value.isSame(d, 'day')) {\n      isSelectedDate = true;\n    } else if (!hideSelection && value && (0, _isMomentRange2.default)(value) && value.contains(d)) {\n      isInSelectedRange = true;\n      isSelectedRangeStart = value.start.isSame(d, 'day');\n      isSelectedRangeEnd = value.end.isSame(d, 'day');\n    }\n\n    return _react2.default.createElement(CalendarDate, _extends({\n      key: i,\n      isToday: d.isSame((0, _momentRange2.default)(), 'day'),\n      isDisabled: !enabledRange.contains(d),\n      isHighlightedDate: !!(highlightedDate && highlightedDate.isSame(d, 'day')),\n      isHighlightedRangeStart: !!(highlightedRange && highlightedRange.start.isSame(d, 'day')),\n      isHighlightedRangeEnd: !!(highlightedRange && highlightedRange.end.isSame(d, 'day')),\n      isInHighlightedRange: !!(highlightedRange && highlightedRange.contains(d)),\n      isSelectedDate: isSelectedDate,\n      isSelectedRangeStart: isSelectedRangeStart,\n      isSelectedRangeEnd: isSelectedRangeEnd,\n      isInSelectedRange: isInSelectedRange,\n      date: d\n    }, props));\n  },\n  renderWeek: function renderWeek(dates, i) {\n    var days = dates.map(this.renderDay);\n    return _react2.default.createElement('tr', {\n      className: this.cx({\n        element: 'Week'\n      }),\n      key: i\n    }, days.toJS());\n  },\n  renderDayHeaders: function renderDayHeaders() {\n    var firstOfWeek = this.props.firstOfWeek;\n\n    var indices = _immutable2.default.Range(firstOfWeek, 7).concat(_immutable2.default.Range(0, firstOfWeek));\n\n    var headers = indices.map(function (index) {\n      var weekday = this.WEEKDAYS.get(index);\n      return _react2.default.createElement('th', {\n        className: this.cx({\n          element: 'WeekdayHeading'\n        }),\n        key: weekday,\n        scope: 'col'\n      }, _react2.default.createElement('abbr', {\n        title: weekday[0]\n      }, weekday[1]));\n    }.bind(this));\n    return _react2.default.createElement('tr', {\n      className: this.cx({\n        element: 'Weekdays'\n      })\n    }, headers.toJS());\n  },\n  handleYearChange: function handleYearChange(event) {\n    this.props.onYearChange(parseInt(event.target.value, 10));\n  },\n  renderYearChoice: function renderYearChoice(year) {\n    var enabledRange = this.props.enabledRange;\n\n    if (year < enabledRange.start.year()) {\n      return null;\n    }\n\n    if (year > enabledRange.end.year()) {\n      return null;\n    }\n\n    return _react2.default.createElement('option', {\n      key: year,\n      value: year\n    }, (0, _momentRange2.default)(year, 'YYYY').locale(this.props.locale).format('YYYY'));\n  },\n  renderHeaderYear: function renderHeaderYear() {\n    var firstOfMonth = this.props.firstOfMonth;\n    var y = firstOfMonth.year();\n\n    var years = _immutable2.default.Range(y - 5, y).concat(_immutable2.default.Range(y, y + 10));\n\n    var choices = years.map(this.renderYearChoice);\n    var modifiers = {\n      year: true\n    };\n    return _react2.default.createElement('span', {\n      className: this.cx({\n        element: 'MonthHeaderLabel',\n        modifiers: modifiers\n      })\n    }, firstOfMonth.locale(this.props.locale).format('YYYY'), this.props.disableNavigation ? null : _react2.default.createElement('select', {\n      className: this.cx({\n        element: 'MonthHeaderSelect'\n      }),\n      value: y,\n      onChange: this.handleYearChange\n    }, choices.toJS()));\n  },\n  handleMonthChange: function handleMonthChange(event) {\n    this.props.onMonthChange(parseInt(event.target.value, 10));\n  },\n  renderMonthChoice: function renderMonthChoice(month, i) {\n    var _props2 = this.props,\n        firstOfMonth = _props2.firstOfMonth,\n        enabledRange = _props2.enabledRange;\n    var disabled = false;\n    var year = firstOfMonth.year();\n\n    if ((0, _momentRange2.default)({\n      years: year,\n      months: i + 1,\n      date: 1\n    }).unix() < enabledRange.start.unix()) {\n      disabled = true;\n    }\n\n    if ((0, _momentRange2.default)({\n      years: year,\n      months: i,\n      date: 1\n    }).unix() > enabledRange.end.unix()) {\n      disabled = true;\n    }\n\n    return _react2.default.createElement('option', {\n      key: month,\n      value: i,\n      disabled: disabled ? 'disabled' : null\n    }, month);\n  },\n  renderHeaderMonth: function renderHeaderMonth() {\n    var firstOfMonth = this.props.firstOfMonth;\n    var choices = this.MONTHS.map(this.renderMonthChoice);\n    var modifiers = {\n      month: true\n    };\n    return _react2.default.createElement('span', {\n      className: this.cx({\n        element: 'MonthHeaderLabel',\n        modifiers: modifiers\n      })\n    }, firstOfMonth.locale(this.props.locale).format('MMMM'), this.props.disableNavigation ? null : _react2.default.createElement('select', {\n      className: this.cx({\n        element: 'MonthHeaderSelect'\n      }),\n      value: firstOfMonth.month(),\n      onChange: this.handleMonthChange\n    }, choices.toJS()));\n  },\n  renderHeader: function renderHeader() {\n    return _react2.default.createElement('div', {\n      className: this.cx({\n        element: 'MonthHeader'\n      })\n    }, this.renderHeaderMonth(), ' ', this.renderHeaderYear());\n  },\n  render: function render() {\n    var _props3 = this.props,\n        firstOfWeek = _props3.firstOfWeek,\n        firstOfMonth = _props3.firstOfMonth;\n    var cal = new _calendar2.default.Calendar(firstOfWeek);\n\n    var monthDates = _immutable2.default.fromJS(cal.monthDates(firstOfMonth.year(), firstOfMonth.month()));\n\n    var weeks = monthDates.map(this.renderWeek);\n    return _react2.default.createElement('div', {\n      className: this.cx({\n        element: 'Month'\n      })\n    }, this.renderHeader(), _react2.default.createElement('table', {\n      className: this.cx({\n        element: 'MonthDates'\n      })\n    }, _react2.default.createElement('thead', null, this.renderDayHeaders()), _react2.default.createElement('tbody', null, weeks.toJS())));\n  }\n});\nexports.default = CalendarMonth;","map":null,"metadata":{},"sourceType":"script"}