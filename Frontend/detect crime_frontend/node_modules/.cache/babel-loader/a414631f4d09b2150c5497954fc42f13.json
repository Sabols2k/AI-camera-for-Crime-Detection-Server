{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\Zest-Package-1.1.0\\\\zestreact-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\Zest-Package-1.1.0\\\\zestreact-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport { verifyTokenStarted, verifyUserSuccess, verifyTokenEnd, userLoginStarted, userLoginFailure, userLogout } from \"../actions/authActions\";\nimport { verifyTokenService, userLoginService, userLogoutService } from '../services/auth'; // handle verify token\n\nexport var verifyTokenAsync = function verifyTokenAsync() {\n  var silentAuth = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        var result;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                dispatch(verifyTokenStarted(silentAuth));\n                _context.next = 3;\n                return verifyTokenService();\n\n              case 3:\n                result = _context.sent;\n\n                if (!result.error) {\n                  _context.next = 8;\n                  break;\n                }\n\n                dispatch(verifyTokenEnd());\n                if (result.response && [401, 403].includes(result.response.status)) dispatch(userLogout());\n                return _context.abrupt(\"return\");\n\n              case 8:\n                if (result.status === 204) dispatch(verifyTokenEnd());else dispatch(verifyUserSuccess(result.data));\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n}; // handle user login\n\nexport var userLoginAsync = function userLoginAsync(username, password) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(dispatch) {\n        var result;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                dispatch(userLoginStarted());\n                _context2.next = 3;\n                return userLoginService(username, password);\n\n              case 3:\n                result = _context2.sent;\n\n                if (!result.error) {\n                  _context2.next = 7;\n                  break;\n                }\n\n                dispatch(userLoginFailure(result.response.data.message));\n                return _context2.abrupt(\"return\");\n\n              case 7:\n                dispatch(verifyUserSuccess(result.data));\n\n              case 8:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }()\n  );\n}; // handle user logout\n\nexport var userLogoutAsync = function userLogoutAsync() {\n  return function (dispatch) {\n    dispatch(userLogout());\n    userLogoutService();\n  };\n};","map":{"version":3,"sources":["C:\\Users\\ASUS\\Desktop\\Zest-Package-1.1.0\\zestreact-app\\src\\views\\general\\asyncActions\\authAsyncActions.js"],"names":["verifyTokenStarted","verifyUserSuccess","verifyTokenEnd","userLoginStarted","userLoginFailure","userLogout","verifyTokenService","userLoginService","userLogoutService","verifyTokenAsync","silentAuth","dispatch","result","error","response","includes","status","data","userLoginAsync","username","password","message","userLogoutAsync"],"mappings":";;AAAA,SACIA,kBADJ,EACwBC,iBADxB,EAC2CC,cAD3C,EAEIC,gBAFJ,EAEsBC,gBAFtB,EAEwCC,UAFxC,QAGS,wBAHT;AAIE,SAASC,kBAAT,EAA6BC,gBAA7B,EAA+CC,iBAA/C,QAAwE,kBAAxE,C,CAEA;;AACA,OAAO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB;AAAA,MAACC,UAAD,uEAAc,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAwB,iBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACtDA,gBAAAA,QAAQ,CAACX,kBAAkB,CAACU,UAAD,CAAnB,CAAR;AADsD;AAAA,uBAGjCJ,kBAAkB,EAHe;;AAAA;AAGhDM,gBAAAA,MAHgD;;AAAA,qBAKlDA,MAAM,CAACC,KAL2C;AAAA;AAAA;AAAA;;AAMpDF,gBAAAA,QAAQ,CAACT,cAAc,EAAf,CAAR;AACA,oBAAIU,MAAM,CAACE,QAAP,IAAmB,CAAC,GAAD,EAAM,GAAN,EAAWC,QAAX,CAAoBH,MAAM,CAACE,QAAP,CAAgBE,MAApC,CAAvB,EACEL,QAAQ,CAACN,UAAU,EAAX,CAAR;AARkD;;AAAA;AAYtD,oBAAIO,MAAM,CAACI,MAAP,KAAkB,GAAtB,EACEL,QAAQ,CAACT,cAAc,EAAf,CAAR,CADF,KAGES,QAAQ,CAACV,iBAAiB,CAACW,MAAM,CAACK,IAAR,CAAlB,CAAR;;AAfoD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAxB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAzB,C,CAkBP;;AACA,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,QAAD,EAAWC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAwB,kBAAMT,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACpDA,gBAAAA,QAAQ,CAACR,gBAAgB,EAAjB,CAAR;AADoD;AAAA,uBAG/BI,gBAAgB,CAACY,QAAD,EAAWC,QAAX,CAHe;;AAAA;AAG9CR,gBAAAA,MAH8C;;AAAA,qBAKhDA,MAAM,CAACC,KALyC;AAAA;AAAA;AAAA;;AAMlDF,gBAAAA,QAAQ,CAACP,gBAAgB,CAACQ,MAAM,CAACE,QAAP,CAAgBG,IAAhB,CAAqBI,OAAtB,CAAjB,CAAR;AANkD;;AAAA;AAUpDV,gBAAAA,QAAQ,CAACV,iBAAiB,CAACW,MAAM,CAACK,IAAR,CAAlB,CAAR;;AAVoD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAxB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB,C,CAaP;;AACA,OAAO,IAAMK,eAAe,GAAG,SAAlBA,eAAkB;AAAA,SAAM,UAAAX,QAAQ,EAAI;AAC/CA,IAAAA,QAAQ,CAACN,UAAU,EAAX,CAAR;AACAG,IAAAA,iBAAiB;AAClB,GAH8B;AAAA,CAAxB","sourcesContent":["import {\r\n    verifyTokenStarted, verifyUserSuccess, verifyTokenEnd,\r\n    userLoginStarted, userLoginFailure, userLogout\r\n  } from \"../actions/authActions\";\r\n  import { verifyTokenService, userLoginService, userLogoutService } from '../services/auth';\r\n   \r\n  // handle verify token\r\n  export const verifyTokenAsync = (silentAuth = false) => async dispatch => {\r\n    dispatch(verifyTokenStarted(silentAuth));\r\n   \r\n    const result = await verifyTokenService();\r\n   \r\n    if (result.error) {\r\n      dispatch(verifyTokenEnd());\r\n      if (result.response && [401, 403].includes(result.response.status))\r\n        dispatch(userLogout());\r\n      return;\r\n    }\r\n   \r\n    if (result.status === 204)\r\n      dispatch(verifyTokenEnd());\r\n    else\r\n      dispatch(verifyUserSuccess(result.data));\r\n  }\r\n   \r\n  // handle user login\r\n  export const userLoginAsync = (username, password) => async dispatch => {\r\n    dispatch(userLoginStarted());\r\n   \r\n    const result = await userLoginService(username, password);\r\n   \r\n    if (result.error) {\r\n      dispatch(userLoginFailure(result.response.data.message));\r\n      return;\r\n    }\r\n   \r\n    dispatch(verifyUserSuccess(result.data));\r\n  }\r\n   \r\n  // handle user logout\r\n  export const userLogoutAsync = () => dispatch => {\r\n    dispatch(userLogout());\r\n    userLogoutService();\r\n  }"]},"metadata":{},"sourceType":"module"}