{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar propTypes = {\n  from: _propTypes2.default.number,\n  to: _propTypes2.default.number.isRequired,\n  speed: _propTypes2.default.number.isRequired,\n  delay: _propTypes2.default.number,\n  onComplete: _propTypes2.default.func,\n  digits: _propTypes2.default.number,\n  className: _propTypes2.default.string,\n  tagName: _propTypes2.default.string,\n  children: _propTypes2.default.func,\n  easing: _propTypes2.default.func\n};\nvar defaultProps = {\n  from: 0,\n  delay: 100,\n  digits: 0,\n  tagName: 'span',\n  easing: function easing(t) {\n    return t;\n  }\n};\n\nvar CountTo = function (_PureComponent) {\n  _inherits(CountTo, _PureComponent);\n\n  function CountTo(props) {\n    _classCallCheck(this, CountTo);\n\n    var _this = _possibleConstructorReturn(this, (CountTo.__proto__ || Object.getPrototypeOf(CountTo)).call(this, props));\n\n    var from = props.from;\n    _this.state = {\n      counter: from\n    };\n    _this.start = _this.start.bind(_this);\n    _this.clear = _this.clear.bind(_this);\n    _this.next = _this.next.bind(_this);\n    _this.updateCounter = _this.updateCounter.bind(_this);\n    return _this;\n  }\n\n  _createClass(CountTo, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.start();\n    }\n  }, {\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      var _props = this.props,\n          from = _props.from,\n          to = _props.to;\n\n      if (nextProps.to !== to || nextProps.from !== from) {\n        this.start(nextProps);\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this.clear();\n    }\n  }, {\n    key: 'start',\n    value: function start() {\n      var _this2 = this;\n\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      this.clear();\n      var from = props.from;\n      this.setState({\n        counter: from\n      }, function () {\n        var _props2 = _this2.props,\n            speed = _props2.speed,\n            delay = _props2.delay;\n        var now = Date.now();\n        _this2.endDate = now + speed;\n\n        _this2.scheduleNextUpdate(now, delay);\n\n        _this2.raf = requestAnimationFrame(_this2.next);\n      });\n    }\n  }, {\n    key: 'next',\n    value: function next() {\n      var now = Date.now();\n      var _props3 = this.props,\n          speed = _props3.speed,\n          onComplete = _props3.onComplete,\n          delay = _props3.delay;\n\n      if (now >= this.nextUpdate) {\n        var progress = Math.max(0, Math.min(1, 1 - (this.endDate - now) / speed));\n        this.updateCounter(progress);\n        this.scheduleNextUpdate(now, delay);\n      }\n\n      if (now < this.endDate) {\n        this.raf = requestAnimationFrame(this.next);\n      } else if (onComplete) {\n        onComplete();\n      }\n    }\n  }, {\n    key: 'scheduleNextUpdate',\n    value: function scheduleNextUpdate(now, delay) {\n      this.nextUpdate = Math.min(now + delay, this.endDate);\n    }\n  }, {\n    key: 'updateCounter',\n    value: function updateCounter(progress) {\n      var _props4 = this.props,\n          from = _props4.from,\n          to = _props4.to,\n          easing = _props4.easing;\n      var delta = to - from;\n      var counter = from + delta * easing(progress);\n      this.setState({\n        counter: counter\n      });\n    }\n  }, {\n    key: 'clear',\n    value: function clear() {\n      cancelAnimationFrame(this.raf);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props5 = this.props,\n          className = _props5.className,\n          digits = _props5.digits,\n          Tag = _props5.tagName,\n          fn = _props5.children;\n      var counter = this.state.counter;\n      var value = counter.toFixed(digits);\n\n      if (fn) {\n        return fn(value);\n      }\n\n      return _react2.default.createElement(Tag, {\n        className: className\n      }, value);\n    }\n  }]);\n\n  return CountTo;\n}(_react.PureComponent);\n\nCountTo.propTypes = propTypes;\nCountTo.defaultProps = defaultProps;\nexports.default = CountTo;","map":null,"metadata":{},"sourceType":"script"}