{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nexports.default = bemCx;\n\nfunction bemCx() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var block = options.block,\n      element = options.element,\n      namespace = options.namespace,\n      modifiers = options.modifiers,\n      states = options.states;\n  var bemClasses = [];\n  var baseClassName = void 0;\n\n  if (element) {\n    if (namespace) {\n      baseClassName = namespace + '-' + block + '__' + element;\n    } else {\n      baseClassName = block + '__' + element;\n    }\n  } else {\n    if (namespace) {\n      baseClassName = namespace + '-' + block;\n    } else {\n      baseClassName = block;\n    }\n  }\n\n  bemClasses.push(baseClassName);\n\n  if (states) {\n    if ((typeof states === 'undefined' ? 'undefined' : _typeof(states)) === 'object') {\n      states = Object.keys(states).filter(function (s) {\n        return states[s];\n      });\n    }\n\n    states.forEach(function (state) {\n      bemClasses.push(baseClassName + '--is-' + state);\n    });\n  }\n\n  if (modifiers) {\n    if ((typeof modifiers === 'undefined' ? 'undefined' : _typeof(modifiers)) === 'object') {\n      modifiers = Object.keys(modifiers).filter(function (m) {\n        return modifiers[m];\n      });\n    }\n\n    modifiers.forEach(function (modifier) {\n      bemClasses.push(baseClassName + '--' + modifier);\n\n      if (states) {\n        states.forEach(function (state) {\n          bemClasses.push(baseClassName + '--' + modifier + '--is-' + state);\n        });\n      }\n    });\n  }\n\n  return bemClasses.join(' ');\n}","map":null,"metadata":{},"sourceType":"script"}