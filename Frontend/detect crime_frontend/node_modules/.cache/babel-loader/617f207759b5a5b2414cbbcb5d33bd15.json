{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\Zest-Package-1.1.0\\\\zestreact-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\Zest-Package-1.1.0\\\\zestreact-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\Zest-Package-1.1.0\\\\zestreact-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\Zest-Package-1.1.0\\\\zestreact-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\Zest-Package-1.1.0\\\\zestreact-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\Zest-Package-1.1.0\\\\zestreact-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\Zest-Package-1.1.0\\\\zestreact-app\\\\src\\\\views\\\\general\\\\Forms\\\\Autosuggest.jsx\";\nimport React from 'react';\nimport { Row, Col } from 'reactstrap';\nimport 'components';\nimport Autosuggest from 'react-autosuggest';\nvar languages = [{\n  name: 'C',\n  year: 1972\n}, {\n  name: 'C#',\n  year: 2000\n}, {\n  name: 'C++',\n  year: 1983\n}, {\n  name: 'Clojure',\n  year: 2007\n}, {\n  name: 'Elm',\n  year: 2012\n}, {\n  name: 'Go',\n  year: 2009\n}, {\n  name: 'Haskell',\n  year: 1990\n}, {\n  name: 'Java',\n  year: 1995\n}, {\n  name: 'Javascript',\n  year: 1995\n}, {\n  name: 'Perl',\n  year: 1987\n}, {\n  name: 'PHP',\n  year: 1995\n}, {\n  name: 'Python',\n  year: 1991\n}, {\n  name: 'Ruby',\n  year: 1995\n}, {\n  name: 'Scala',\n  year: 2003\n}]; // Teach Autosuggest how to calculate suggestions for any given input value.\n\nvar getSuggestions = function getSuggestions(value) {\n  var inputValue = value.trim().toLowerCase();\n  var inputLength = inputValue.length;\n  return inputLength === 0 ? [] : languages.filter(function (lang) {\n    return lang.name.toLowerCase().slice(0, inputLength) === inputValue;\n  });\n}; // When suggestion is clicked, Autosuggest needs to populate the input\n// based on the clicked suggestion. Teach Autosuggest how to calculate the\n// input value for every given suggestion.\n\n\nvar getSuggestionValue = function getSuggestionValue(suggestion) {\n  return suggestion.name;\n}; // Use your imagination to render suggestions.\n\n\nvar renderSuggestion = function renderSuggestion(suggestion) {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, suggestion.name);\n};\n\nvar FormAutosuggest =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FormAutosuggest, _React$Component);\n\n  function FormAutosuggest(props) {\n    var _this;\n\n    _classCallCheck(this, FormAutosuggest);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FormAutosuggest).call(this, props));\n\n    _this.onChange = function (event, _ref) {\n      var newValue = _ref.newValue;\n\n      _this.setState({\n        value: newValue\n      });\n    };\n\n    _this.onSuggestionsFetchRequested = function (_ref2) {\n      var value = _ref2.value;\n\n      _this.setState({\n        suggestions: getSuggestions(value)\n      });\n    };\n\n    _this.onSuggestionsClearRequested = function () {\n      _this.setState({\n        suggestions: []\n      });\n    };\n\n    _this.state = {\n      value: '',\n      suggestions: []\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(FormAutosuggest, [{\n    key: \"handleChange\",\n    value: function handleChange(tags) {\n      this.setState({\n        tags: tags\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          value = _this$state.value,\n          suggestions = _this$state.suggestions; // Autosuggest will pass through all these props to the input.\n\n      var inputProps = {\n        placeholder: 'Type a programming language',\n        value: value,\n        onChange: this.onChange\n      };\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: 12,\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"page-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"float-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, \"Auto Suggest / Typeahead\"))), React.createElement(\"div\", {\n        className: \"col-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(\"section\", {\n        className: \"box \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"panel_header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"title float-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, \"Auto Suggest / Typeahead\")), React.createElement(\"div\", {\n        className: \"content-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-12 col-sm-12 col-md-10 col-lg-10 col-xl-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(Autosuggest, {\n        suggestions: suggestions,\n        onSuggestionsFetchRequested: this.onSuggestionsFetchRequested,\n        onSuggestionsClearRequested: this.onSuggestionsClearRequested,\n        getSuggestionValue: getSuggestionValue,\n        renderSuggestion: renderSuggestion,\n        inputProps: inputProps,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }))))))))));\n    }\n  }]);\n\n  return FormAutosuggest;\n}(React.Component);\n\nexport default FormAutosuggest;","map":{"version":3,"sources":["C:\\Users\\ASUS\\Desktop\\Zest-Package-1.1.0\\zestreact-app\\src\\views\\general\\Forms\\Autosuggest.jsx"],"names":["React","Row","Col","Autosuggest","languages","name","year","getSuggestions","value","inputValue","trim","toLowerCase","inputLength","length","filter","lang","slice","getSuggestionValue","suggestion","renderSuggestion","FormAutosuggest","props","onChange","event","newValue","setState","onSuggestionsFetchRequested","suggestions","onSuggestionsClearRequested","state","handleChange","bind","tags","inputProps","placeholder","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {\r\n    Row, Col,\r\n} from 'reactstrap';\r\n\r\nimport {\r\n    \r\n} from 'components';\r\n\r\nimport Autosuggest from 'react-autosuggest';\r\n\r\n\r\nconst languages = [\r\n  {\r\n    name: 'C',\r\n    year: 1972\r\n  },\r\n  {\r\n    name: 'C#',\r\n    year: 2000\r\n  },\r\n  {\r\n    name: 'C++',\r\n    year: 1983\r\n  },\r\n  {\r\n    name: 'Clojure',\r\n    year: 2007\r\n  },\r\n  {\r\n    name: 'Elm',\r\n    year: 2012\r\n  },\r\n  {\r\n    name: 'Go',\r\n    year: 2009\r\n  },\r\n  {\r\n    name: 'Haskell',\r\n    year: 1990\r\n  },\r\n  {\r\n    name: 'Java',\r\n    year: 1995\r\n  },\r\n  {\r\n    name: 'Javascript',\r\n    year: 1995\r\n  },\r\n  {\r\n    name: 'Perl',\r\n    year: 1987\r\n  },\r\n  {\r\n    name: 'PHP',\r\n    year: 1995\r\n  },\r\n  {\r\n    name: 'Python',\r\n    year: 1991\r\n  },\r\n  {\r\n    name: 'Ruby',\r\n    year: 1995\r\n  },\r\n  {\r\n    name: 'Scala',\r\n    year: 2003\r\n  }\r\n];\r\n\r\n\r\n// Teach Autosuggest how to calculate suggestions for any given input value.\r\nconst getSuggestions = value => {\r\n  const inputValue = value.trim().toLowerCase();\r\n  const inputLength = inputValue.length;\r\n\r\n  return inputLength === 0 ? [] : languages.filter(lang =>\r\n    lang.name.toLowerCase().slice(0, inputLength) === inputValue\r\n  );\r\n};\r\n\r\n// When suggestion is clicked, Autosuggest needs to populate the input\r\n// based on the clicked suggestion. Teach Autosuggest how to calculate the\r\n// input value for every given suggestion.\r\nconst getSuggestionValue = suggestion => suggestion.name;\r\n\r\n// Use your imagination to render suggestions.\r\nconst renderSuggestion = suggestion => (\r\n  <div>\r\n    {suggestion.name}\r\n  </div>\r\n);\r\n\r\n\r\nclass FormAutosuggest extends React.Component{\r\n    constructor (props) {\r\n    super(props)\r\n    this.state = {\r\n        value: '',\r\n      suggestions: []\r\n          };\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n\r\n  onChange = (event, { newValue }) => {\r\n    this.setState({\r\n      value: newValue\r\n    });\r\n  }\r\n\r\n  // Autosuggest will call this function every time you need to update suggestions.\r\n  // You already implemented this logic above, so just use it.\r\n  onSuggestionsFetchRequested = ({ value }) => {\r\n    this.setState({\r\n      suggestions: getSuggestions(value)\r\n    });\r\n  }\r\n\r\n  // Autosuggest will call this function every time you need to clear suggestions.\r\n  onSuggestionsClearRequested = () => {\r\n    this.setState({\r\n      suggestions: []\r\n    });\r\n  }\r\n\r\n  handleChange(tags) {    this.setState({      tags: tags    })  }\r\n\r\n    render(){\r\n        \r\n        const { value, suggestions } = this.state;\r\n\r\n        // Autosuggest will pass through all these props to the input.\r\n        const inputProps = {\r\n          placeholder: 'Type a programming language',\r\n          value,\r\n          onChange: this.onChange\r\n        };\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"content\">\r\n                    <Row>\r\n                        <Col xs={12} md={12}>\r\n\r\n                    <div className=\"page-title\">\r\n                        <div className=\"float-left\">\r\n                            <h1 className=\"title\">Auto Suggest / Typeahead</h1>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n               \r\n                              \r\n                    <div className=\"col-12\">\r\n                        <section className=\"box \">\r\n                            <header className=\"panel_header\">\r\n                                <h2 className=\"title float-left\">Auto Suggest / Typeahead</h2>\r\n                                \r\n                            </header>\r\n                            <div className=\"content-body\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-12 col-sm-12 col-md-10 col-lg-10 col-xl-8\">\r\n             \r\n                                    \r\n    <Autosuggest\r\n        suggestions={suggestions}\r\n        onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\r\n        onSuggestionsClearRequested={this.onSuggestionsClearRequested}\r\n        getSuggestionValue={getSuggestionValue}\r\n        renderSuggestion={renderSuggestion}\r\n        inputProps={inputProps}\r\n      />\r\n\r\n                                  </div>\r\n                              </div>\r\n                            </div>\r\n                        </section>\r\n                        </div>\r\n\r\n                                \r\n                        </Col>\r\n\r\n                    </Row>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FormAutosuggest;\r\n"]},"metadata":{},"sourceType":"module"}