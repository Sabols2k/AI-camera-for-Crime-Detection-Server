{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.formatDate = exports.getFormatter = void 0;\n\nvar _getUserLocale = _interopRequireDefault(require(\"get-user-locale\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar formatterCache = {};\n/**\n * Gets Intl-based date formatter from formatter cache. If it doesn't exist in cache\n * just yet, it will be created on the fly.\n */\n\nvar getFormatter = function getFormatter(locale, options) {\n  if (!locale) {\n    // Default parameter is not enough as it does not protect us from null values\n    // eslint-disable-next-line no-param-reassign\n    locale = (0, _getUserLocale.default)();\n  }\n\n  var stringifiedOptions = JSON.stringify(options);\n\n  if (!formatterCache[locale]) {\n    formatterCache[locale] = {};\n  }\n\n  if (!formatterCache[locale][stringifiedOptions]) {\n    formatterCache[locale][stringifiedOptions] = function (n) {\n      return n.toLocaleString(locale, options);\n    };\n  }\n\n  return formatterCache[locale][stringifiedOptions];\n};\n\nexports.getFormatter = getFormatter;\n\nvar formatDate = function formatDate(locale, date) {\n  return getFormatter(locale, {\n    day: 'numeric',\n    month: 'numeric',\n    year: 'numeric'\n  })(date);\n};\n\nexports.formatDate = formatDate;","map":null,"metadata":{},"sourceType":"script"}