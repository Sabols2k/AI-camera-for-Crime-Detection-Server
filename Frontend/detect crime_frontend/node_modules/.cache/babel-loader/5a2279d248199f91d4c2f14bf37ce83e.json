{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _ButtonGroup = require('react-bootstrap/lib/ButtonGroup');\n\nvar _ButtonGroup2 = _interopRequireDefault(_ButtonGroup);\n\nvar _Button = require('react-bootstrap/lib/Button');\n\nvar _Button2 = _interopRequireDefault(_Button);\n\nvar _NavButton = require('./modules/NavButton');\n\nvar _NavButton2 = _interopRequireDefault(_NavButton);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar Pagination = function Pagination(_ref) {\n  var data = _ref.data,\n      rowsPerPage = _ref.rowsPerPage,\n      keyName = _ref.keyName,\n      currentPage = _ref.currentPage,\n      onPageNavigate = _ref.onPageNavigate,\n      labels = _ref.labels;\n  var renderedElements = null;\n\n  if (rowsPerPage !== undefined) {\n    var dataLength = data.length;\n    var numberOfPages = Math.ceil(dataLength / rowsPerPage);\n    var buttons = [];\n    var firstLabel = labels.first || 'First';\n    var prevLabel = labels.prev || 'Prev';\n    var nextLabel = labels.next || 'Next';\n    var lastLabel = labels.last || 'Last';\n    var startNumber = void 0;\n    var i = 0;\n    var hasPrev = true;\n    var hasNext = true;\n\n    if (currentPage === 1) {\n      startNumber = 1;\n      hasPrev = false;\n      hasNext = numberOfPages > 1;\n    } else if (currentPage === numberOfPages && numberOfPages !== 1) {\n      startNumber = numberOfPages - 2 > 0 ? currentPage - 2 : 1;\n      hasNext = false;\n    } else {\n      startNumber = currentPage - 1;\n    }\n\n    buttons.push(_react2.default.createElement(_NavButton2.default, {\n      key: keyName + '-page-' + firstLabel,\n      pageNavNumber: 1,\n      disabled: !hasPrev,\n      onPageNavigate: onPageNavigate,\n      label: firstLabel\n    }), _react2.default.createElement(_NavButton2.default, {\n      key: keyName + '-page-' + prevLabel,\n      pageNavNumber: currentPage - 1,\n      disabled: !hasPrev,\n      onPageNavigate: onPageNavigate,\n      label: prevLabel\n    }));\n\n    while (i < 3 && startNumber <= numberOfPages) {\n      var pageBtnProps = {\n        key: keyName + '-page-btn-' + startNumber,\n        onClick: onPageNavigate(startNumber),\n        active: currentPage === startNumber\n      };\n      buttons.push(_react2.default.createElement(_Button2.default, pageBtnProps, startNumber));\n      i += 1;\n      startNumber += 1;\n    }\n\n    buttons.push(_react2.default.createElement(_NavButton2.default, {\n      key: keyName + '-page-' + nextLabel,\n      pageNavNumber: currentPage + 1,\n      disabled: !hasNext,\n      onPageNavigate: onPageNavigate,\n      label: nextLabel\n    }), _react2.default.createElement(_NavButton2.default, {\n      key: keyName + '-page-' + lastLabel,\n      pageNavNumber: numberOfPages,\n      disabled: !hasNext,\n      onPageNavigate: onPageNavigate,\n      label: lastLabel\n    }));\n    renderedElements = _react2.default.createElement(_ButtonGroup2.default, {\n      className: 'btn-group-page-nav'\n    }, buttons);\n  }\n\n  return renderedElements;\n};\n\nPagination.propTypes = {\n  data: _propTypes2.default.array.isRequired,\n  keyName: _propTypes2.default.string.isRequired,\n  currentPage: _propTypes2.default.number.isRequired,\n  onPageNavigate: _propTypes2.default.func.isRequired,\n  rowsPerPage: _propTypes2.default.number,\n  labels: _propTypes2.default.object\n};\nPagination.defaultProps = {\n  rowsPerPage: undefined,\n  labels: {}\n};\nexports.default = Pagination;","map":null,"metadata":{},"sourceType":"script"}