{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\Zest-Package-1.1.0\\\\zestreact-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\Zest-Package-1.1.0\\\\zestreact-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\Zest-Package-1.1.0\\\\zestreact-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\Zest-Package-1.1.0\\\\zestreact-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\Zest-Package-1.1.0\\\\zestreact-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\Zest-Package-1.1.0\\\\zestreact-app\\\\src\\\\views\\\\general\\\\UI\\\\Code.jsx\";\nimport React from 'react';\nimport { Row, Col } from 'reactstrap';\nimport 'components';\n\nvar UICode =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(UICode, _React$Component);\n\n  function UICode() {\n    _classCallCheck(this, UICode);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(UICode).apply(this, arguments));\n  }\n\n  _createClass(UICode, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: 12,\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"page-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"float-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, \"Code Style\"))), React.createElement(\"div\", {\n        className: \"col-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"section\", {\n        className: \"box \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"panel_header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"title float-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"Code\")), React.createElement(\"div\", {\n        className: \"content-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"    \", React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-lg-12 col-md-12 col-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"For example, \", React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"<section>\"), \" should be wrapped as inline.\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"spacer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }), \"To switch directories, type \", React.createElement(\"kbd\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"cd\"), \" followed by the name of the directory.\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }), \"To edit settings, press \", React.createElement(\"kbd\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"kbd\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"ctrl\"), \" + \", React.createElement(\"kbd\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \",\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"spacer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }), React.createElement(\"pre\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"<p>Sample text here...</p>\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"spacer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }), React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"<section>\"), \" should be wrapped as inline.\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"spacer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }), React.createElement(\"var\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"y\"), \" = \", React.createElement(\"var\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"m\"), React.createElement(\"var\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"x\"), \" + \", React.createElement(\"var\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"b\"))))))))));\n    }\n  }]);\n\n  return UICode;\n}(React.Component);\n\nexport default UICode;","map":{"version":3,"sources":["C:\\Users\\ASUS\\Desktop\\Zest-Package-1.1.0\\zestreact-app\\src\\views\\general\\UI\\Code.jsx"],"names":["React","Row","Col","UICode","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAEIC,GAFJ,EAESC,GAFT,QAGO,YAHP;AAKA,OAEO,YAFP;;IAIMC,M;;;;;;;;;;;;;6BAGM;AAEJ,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,EAAT;AAAa,QAAA,EAAE,EAAE,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEJ;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,CADJ,CAFI,EAWJ;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAS,QAAA,SAAS,EAAC,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,SAAS,EAAC,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,SAAS,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,CADJ,EAKI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAkC;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACtB;AAAK,QAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADjB,mCAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,EAGS;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHT,kCAKgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALhC,6CAKoF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALpF,8BAM4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAL,SAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAvB,CAN5B,EAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARJ,EAQS;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QART,EAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAVJ,EAYI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAZJ,EAYS;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAZT,EAcI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAdJ,mCAeI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAfJ,EAeS;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAfT,EAgBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAhBJ,SAgBmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAhBnB,EAgB+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAhB/B,SAgB8C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAhB9C,CADsB,CAAlC,CALJ,CADJ,CAXI,CADJ,CADJ,CADJ,CADJ;AAsDH;;;;EA3DgBH,KAAK,CAACI,S;;AA8D3B,eAAeD,MAAf","sourcesContent":["import React from 'react';\r\nimport {\r\n\r\n    Row, Col,\r\n} from 'reactstrap';\r\n\r\nimport {\r\n    \r\n} from 'components';\r\n\r\nclass UICode extends React.Component{\r\n   \r\n    \r\n    render(){\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"content\">\r\n                    <Row>\r\n                        <Col xs={12} md={12}>\r\n\r\n                    <div className=\"page-title\">\r\n                        <div className=\"float-left\">\r\n                            <h1 className=\"title\">Code Style</h1>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                            \r\n        \r\n                    <div className=\"col-12\">\r\n                        <section className=\"box \">\r\n                            <header className=\"panel_header\">\r\n                                <h2 className=\"title float-left\">Code</h2>\r\n                                \r\n                            </header>\r\n                            <div className=\"content-body\">    <div className=\"row\">\r\n                                        <div className=\"col-lg-12 col-md-12 col-12\">\r\n                                            For example, <code>&lt;section&gt;</code> should be wrapped as inline.\r\n\r\n                                            <br/><div className=\"spacer\"></div>\r\n\r\n                                            To switch directories, type <kbd>cd</kbd> followed by the name of the directory.<br/>\r\n                                            To edit settings, press <kbd><kbd>ctrl</kbd> + <kbd>,</kbd></kbd>\r\n\r\n                                            <br/><div className=\"spacer\"></div>\r\n\r\n                                            <pre>&lt;p&gt;Sample text here...&lt;/p&gt;</pre>\r\n\r\n                                            <br/><div className=\"spacer\"></div>\r\n\r\n                                            <code>&lt;section&gt;</code> should be wrapped as inline.\r\n                                            <br/><div className=\"spacer\"></div>\r\n                                            <var>y</var> = <var>m</var><var>x</var> + <var>b</var>\r\n\r\n                                        </div>\r\n                                </div>\r\n                            </div>\r\n                        </section></div>\r\n   \r\n\r\n           \r\n                                \r\n                        </Col>\r\n\r\n                    </Row>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UICode;\r\n"]},"metadata":{},"sourceType":"module"}